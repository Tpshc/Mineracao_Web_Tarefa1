ar
X
iv
:1
70
9.
01
71
2v
1 
 [
q-
bi
o.
O
T
] 
 6
 S
ep
 2
01
7
Information Theory and the Length
Distribution of all Discrete Systems
Les Hatton1* Gregory Warr2**
1 Faculty of Science, Engineering and Computing, Kingston
University, London, UK
2 Medical University of South Carolina, Charleston, South
Carolina, USA.
* lesh@oakcomp.co.uk ** gregory.warr@cantab.net
Revision: $Revision: 1.35 $
Date: $Date: 2017/09/06 07:30:43 $
Abstract
We begin with the extraordinary observation that the length distribution
of 80 million proteins in UniProt, the Universal Protein Resource,
measured in amino acids, is qualitatively identical to the length
distribution of large collections of computer functions measured in
programming language tokens, at all scales. That two such disparate
discrete systems share important structural properties suggests that yet
other apparently unrelated discrete systems might share the same
properties, and certainly invites an explanation.
We demonstrate that this is inevitable for all discrete systems of
components built from tokens or symbols. Departing from existing work
by embedding the Conservation of Hartley-Shannon information (CoHSI)
in a classical statistical mechanics framework, we identify two kinds of
discrete system, heterogeneous and homogeneous. Heterogeneous systems
contain components built from a unique alphabet of tokens and yield an
implicit CoHSI distribution with a sharp unimodal peak asymptoting to a
power-law. Homogeneous systems contain components each built from
just one kind of token unique to that component and yield a CoHSI
distribution corresponding to Zipf’s law.
This theory is applied to heterogeneous systems, (proteome, computer
software, music); homogeneous systems (language texts, abundance of the
elements); and to systems in which both heterogeneous and homogeneous
behaviour co-exist (word frequencies and word length frequencies in
language texts). In each case, the predictions of the theory are tested and
1
supported to high levels of statistical significance. We also show that in
the same heterogeneous system, different but consistent alphabets must
be related by a power-law. We demonstrate this on a large body of music
by excluding and including note duration in the definition of the unique
alphabet of notes.
Statement of reproducibility
This paper adheres to the transparency and reproducibility principles
espoused by [9, 14, 24, 27, 44, 72] and includes references to all methods
and source code necessary to reproduce the results presented. These are
referred to here as the reproducibility deliverables and are available in
several packages1, one for each published paper [23, 25] and another
covering the work presented here. All data used are openly available,
thanks to the efforts of scientists everywhere.
Each reproducibility deliverable allows all results, tables and diagrams
to be reproduced individually for that paper, as well as performing
verification checks on machine environment, availability of essential open
source packages, quality of arithmetic and regression testing of the
outputs [26]. Note that these packages are designed to run on Linux
machines for no other reason than to guarantee the absence of any closed
source and therefore potentially opaque contributions to these results.
1http://leshatton.org/index_RE.html
2
Preface: an interesting observation
We start with an interesting observation. If we measure in large
populations, how often proteins of different lengths occur (measured in
amino acids), and how often computer functions of different lengths occur
(measured in programming tokens), we find the following frequency
distributions, Figs. 1a, 1b.
A
 0
 20000
 40000
 60000
 80000
 100000
 120000
 1000  2000  3000  4000  5000  6000  7000  8000
A
bu
nd
an
ce
 o
f p
ro
te
in
s 
in
 T
re
m
bl
Protein length
B
 0
 1000
 2000
 3000
 4000
 5000
 6000
 7000
 8000
 9000
 10000
 0  200  400  600  800  1000  1200  1400  1600  1800  2000
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
ti
ti (tokens)
Figure 1. The frequency distributions of component lengths in two
radically different discrete systems - the known proteome as represented
by version 17-03 of the TrEMBL distribution (A), and a large collection
of computer programs (B) [23]. In each case the y-axis is the frequency of
occurrence and the x-axis the length.
We observe the following:-
• Fig. 1a is derived from the European Protein Database TrEMBL
version 17-03 (March 2017), [64]. It is a very large and rapidly
growing dataset currently containing around 80 million proteins
built from almost 27 billion amino acids. Fig. 1b is derived from an
analysis of 80 million lines of computer programs written in the
programming language C, corresponding to around 500 million
programming tokens, around 99% of which is open source,
downloaded from various online archives, [23].
• The two systems arose over very different timescales - proteins first
appeared perhaps as long ago as 4 billion years, and have been
evolving since under natural selection, whilst the C software is
definitely less than 40 years old (the C language did not exist much
before this).
• They are of very different sizes. The protein data are around 50
times larger than the software data.
• They arose through very different processes; proteins are the result
of natural selection - nature’s “Blind Watchmaker” [13], whilst
3
computer programs are the result of deliberate human intellectual
endeavour.
• Protein data are inherently less accurate than software data [4].
Protein data sequencing2 is subject to experimental error whereas
software data sequencing (or tokenization) is precisely defined by
programming language standards (ISO/IEC 9899:2011 in the case
of C [28]) and is therefore repeatable.
• The frequency distributions of Figs. 1a and 1b are quite
extraordinarily alike. Both have a sharp unimodal peak with almost
linear slopes away from the peaks and from the peak onwards
towards longer components, both obey an astonishingly accurate
power-law as we shall see.
So, why are they so alike ? Note that it is not simply a
serendipitous choice of datasets, because we will see this
pattern appearing again and again at different levels of
aggregation and in entirely different systems.
Instead, as we will show here, this actually arises from
the operation of a conservation principle for discrete sys-
tems - Conservation of Hartley-Shannon Information (re-
ferred to generically as CoHSI here to distinguish from
other uses of the word “information”) - acting at a deeper
level than either natural selection or human volition.
2https://en.wikipedia.org/wiki/Protein_sequencing, accessed 03-Jun-2017
4
Introduction
Such uncanny similarity in very disparate systems strongly suggests the
action of an external principle independent of any particular system, so
to explore the concepts, let us first consider some examples of discrete
systems. Here a discrete system is considered to be a set of components,
each of which is built from a unique alphabet of discrete choices or tokens.
Table 1 illustrates this nomenclature and its equivalents in various kinds
of system.
System Components Building blocks (to-
kens)
Proteome Proteins Amino Acids
Computer Program Function Language tokens
Music Musical composition Notes
Text Documents Words, Letters
The Universe Elements Atomic Numbers
Table 1. Comparable entities in discrete systems considered in this
paper.
The first thing to notice is that this seems a very coarse taxonomy. In
the case of proteins, there is no mention of domain of life or species or
any other kind of aggregation. Similarly with computer programs, we do
not include the language in which they were written or the application
area. The reason for this as will be seen later is that these considerations
are irrelevant.
We will expand on each system later as we apply the theory and
discuss its ramifications for each, but the most important concept to
grasp now is that there are two measures, total length and unique
alphabet, which will turn out to be fundamental across all such systems.
To illustrate, consider two hypothetical components consisting of the
strings of letters shown as rows in Table 2.
String
AAABA FGACD FFGAB BBBBQ QQQQQ
XYZZY TWIST YZZYX TSIWT
Table 2. Two simple strings of letters.
The total length in letters of the first string in Table 2 is 25. This is
made up of six occurrences of A, 6 of B, 1 of C, 1 of D, 3 of F, 2 of G and
6 of Q. We therefore define the unique alphabet of this component to be
of size 7, corresponding to ABCDFGQ. In other words, the string is built
5
up from one or more occurrences of each and every letter in its unique
alphabet.
The second string is made up of 20 characters consisting of 2 of X, 4 of
Y, 4 of Z, 4 of T, 2 of W, 2 of I and 2 of S. Its unique alphabet is
therefore XYZTWIS. In other words, these two strings have different
lengths but they have the same size unique alphabet. As we will see by
considering the information content shortly, this property will turn out to
be fundamental - the actual letters making up the unique alphabet will
turn out to be irrelevant and the two strings inextricably linked in an
information theoretic sense.
6
Methodology
The methodology we use combines two disparate but long-established
methodologies - Statistical Mechanics and Information Theory in a novel
way using the simplest possible definition of Information originally
defined by Hartley [20]. We will show that this alone is sufficient to
predict all the observed features of Figs. 1a and 1b and why indeed they
are so similar.
Statistical Mechanics can be used to predict component distributions
of general systems made from discrete tokens subject to restrictions
known as constraints. Its classical origins can be found in the Kinetic
Theory of Gases [59] (p.217-) wherein constraints are applied by fixing
the total number of particles and the total energy [17]. However, the
methodology is very general and can equally be used with different
constraints on collections of proteins (made from amino acids), software
(made from programming language tokens) and, as we shall see, simple
boxes containing coloured beads.
Hartley-Shannon Information theory is the result of the pioneering
works of Ralph Hartley [20] as developed later by Claude
Shannon [54, 55]. It forms the backbone of modern digital communication
theory and is also astonishingly versatile.
The Hartley-Shannon Information Content of a compo-
nent, in the sense we use here is simply defined to be the
natural logarithm of the total number of distinct ways
of arranging the tokens of that component, without any
regard for what those tokens actually mean.
The motivation behind the choice of this form of information is that
Figs. 1a and 1b derive from systems with little if anything in common,
but Hartley’s definition of information is token-agnostic; in other words
the meaning of the tokens is irrelevant. Furthermore, its use favours the
ergodic nature of classical Statistical Mechanics with token choice equally
likely.
Combining Statistical Mechanics and some form of Information Theory
is not new. For example, building on the maximum entropy framework
of [30] rooted in probability theory, Frank demonstrates that by
combining Shannon Information [54] in a maximum entropy context, the
common patterns of nature - Gaussian, exponential, power-law - as
predicted by neutral generative processes, naturally emerge [15]. Here a
neutral generative process assumes that each microscopic process follows
random stochastic fluctuations. Frank’s use of information can be
interpreted as additional knowledge about a system constraining the
7
possible patterns which might result. For example, amongst other things,
he demonstrates that simply from an assumption about the measurement
scale and knowledge about the geometric mean, a power-law arises.
Frank [15] also stresses the need to distinguish between the generation of
patterns by purely random or neutral process on the one hand, and the
generation of patterns by aggregation of non-neutral processes in which
non-neutral fluctuations cancel in the aggregate.
Power-laws
Power-laws (a.k.a the Pareto distribution) are ubiquitous in nature and
are emphatically present in all of the datasets analysed in this paper. In
essence they have a probability distribution which depends on a power
b > 1 of the independent variable.
p(x) ? x?b (1)
It is important to note that there are numerous known processes which
lead to power-laws [42] and indeed the literature abounds with studies,
from the original empirical work of Zipf [73], and the earliest generative
models such as preferential attachment [57] onwards. It is also important
to note that other statistical distributions notably lognormal frequently
occur in natural phenomena [38].
In earlier work [22, 23, 25] using the original and arguably the most
parsimonious definition of information, [20], embedded as a constraint
directly within the classical Statistical Mechanics framework, we
demonstrated with compelling support from measurement, that for large
components, this alone was enough to generate the extraordinarily precise
power-laws observed not only in the length distribution of proteins and
software, but also in the distributions of the alphabet of unique tokens.
However given the ubiquity of power-laws (and indeed the reasons for
this [15]), perhaps the most compelling reason for accepting the
power-law generation inherent in CoHSI as opposed to other generative
mechanisms, is to realise that conservation principles cannot be applied
selectively. They are inherently global and either apply everywhere or
nowhere and therefore our use of CoHSI must explain satisfactorily all of
the observed properties of the length distributions which appear as Figs.
1a, 1b, including the sharply unimodal behaviour for smaller values of the
independent variable.
Our novel contributions to the existing body of work are:-
• We show that the token-agnostic and scale-independent CoHSI does
indeed predict all the qualitative features of the distributions of
Figs. 1a and 1b with no other assumptions apart from the
8
conventional use of Stirling’s theorem to approximate factorials
(Appendix A p. 40). This is particularly significant because
distributions of the nature of Figs. 1a and 1b are often treated by
combining two separate distributions, such as lognormal with a
power-law tail [39]. As we show, a single implicit distribution which
naturally follows from CoHSI is sufficient, thereby emphasizing the
parsimony of this approach,
• CoHSI naturally leads to an alternative proof of Zipf’s law
(Appendix A p. 50), as we might expect for this Conservation
principle,
• We enlarge on the results originally derived asymptotically, [25]
that average component lengths (protein, software function ...) are
highly conserved across aggregations. We also point out why very
long components naturally must appear quite frequently without
any obvious domain-based reason, (Appendix B p. 53),
• We show that the asymptotic duality first reported in [25] between
length distribution and alphabet size distribution, naturally implies
that different but consistent alphabets for the same system must
also be related by power-law, (Appendix C p. 55). It also follows
that the maximum size of a unique alphabet is intimately related to
the total number of components through the slope of the
corresponding power-law,
• We give experimental confirmation to high levels of significance in
multiple disparate datasets at different levels of aggregation for
these predictions including systems which contain both
heterogeneous and homogeneous behaviour.
We stress we are not data-fitting here, and we are not explicitly
applying constraints on knowledge of types of mean or variance. Instead,
both the sharp unimodal peak and the very precise power-law tail of Figs.
1a and 1b naturally emerge from the single Conservation principle, just as
the Maxwell-Boltzmann distribution naturally emerges from the
Conservation of Energy in Kinetic Theory [59].
Why conserve information ?
To understand this seemingly ad hoc assumption, we must delve into
ergodicity and consider exactly what happens in classical statistical
mechanics when we apply the constraints of total size and total energy to
find the most likely distribution of particles amongst energy levels.
Perhaps the most important thing to realise about the statistical
9
mechanics methodology is that it is simply a mathematical technique.
The fact that it is energy (a physical quantity) which is being conserved
along with the total number of contributing particles in kinetic theory is
irrelevant - conventionally, anything additive can be conserved, however
abstract. The real world only intrudes into the statistical mechanics of
Kinetic Theory via Clausius’ entropic version of the Second Law of
Thermodynamics. Without this, statistical mechanics simply answers the
mathematical question of the most likely distribution of particles or
tokens when their total number and their total payload (in this case
energy) is conserved.
In other words, amongst all the possible systems with that number of
particles and that total payload (the ergodic ensemble), then presented
with one of them, it is most likely to follow the distribution predicted by
statistical mechanics for the ensemble. It doesn’t have to, but it is
overwhelmingly likely that it does. In kinetic theory, the payload happens
to be a physical additive quantity, the energy, and the corresponding
distribution of particles is then the Maxwell-Boltzmann distribution, but
to say something about a system, statistical mechanics does not need to
be rooted in tangibly defined entities in the physical world. We simply
have to interpret the result appropriately.
Now it so happens that Hartley-Shannon information content, like
energy, is also additive for independent sub-systems. The total energy E
of two sub-systems with individual energies E1 and E2 is E = E1 + E2.
Similarly, by virtue of its logarithmic definition, the total
Hartley-Shannon information content I of two sub-systems with
individual information content I1 and I2 is I = I1 + I2. The difference
between the two is that energy is a physical quantity, whereas
Hartley-Shannon information content is just the log of the total number
of ways of arranging something [8]. Mathematically it resembles entropy
but we should be hesitant about reading too much into this [33], p. 144.
However, we may still use the formalism of statistical mechanics, which
we do here.
10
It is in this sense that we assert that Conservation of
Hartley-Shannon Information underlies the length distri-
bution of discrete systems whatever their provenance. It
is a natural consequence of statistical mechanics that if we
are presented with a system with a total number of tokens
and a total information payload, then it is overwhelmingly
likely to follow a certain size distribution as described in
what follows. The scale-independence of the results follows
from the fact that, given any system, it is the properties
of the ergodic system of the same parameters which de-
fines the most likely distributions to occur in any one of
its constituents. This paper contains many examples of
real systems at all levels of aggregation where precisely
this size distribution is found, just as we expect from the
theory.
Statistical Mechanics
Statistical Mechanics connects the minutiae of systems of large numbers
of small particles to macroscopic properties of those systems [17]. Like
Hartley-Shannon Information, it is quite astonishingly versatile and arose
originally in the Kinetic Theory of Gases, leading eventually in the hands
of James Clerk Maxwell and later Ludwig Boltzmann in the 19th century,
to the statistical distribution of velocities and on to the concept of
Entropy3.
The methodology of Statistical Mechanics leads naturally to links with
probability distributions and energy in the case of gases. Here we use the
same methodology but by embedding CoHSI as a constraint in Statistical
Mechanics rather than Conservation of Energy, we demonstrate that this
links Hartley-Shannon Information directly to probability distributions of
component length and unique alphabet size in discrete systems.
We distinguish between two fundamental types of system which lead
naturally to two different definitions of information. Both contain
components made from discrete tokens as described above but with one
fundamental difference.
Heterogeneous We define heterogeneous systems here as systems
wherein a component has more than one kind of distinct token.
This would include systems as disparate as the proteome, software
3https://en.wikipedia.org/wiki/Kinetic_theory_of_gases, accessed 25-May-
2017.
11
and digital representations of music. Appendix A p. 40 contains a
detailed development of these systems.
Homogeneous We define homogeneous systems here as systems wherein
a component has only one kind of distinct token and each distinct
token is unique to one component. This would include textual
documents and word counts as well as the distribution of elements
in the universe. In such systems, a heterogeneous definition of
information would be degenerate and a different definition is
necessary. Appendix A p. 50 contains the detailed development for
this kind of system leading directly to an alternative proof of Zipf’s
law.
However, this is irrelevant as far as statistical mechanics goes because
for a given definition of Hartley-Shannon Information, the methodology
simply tells us the most likely, or canonical distribution for ergodic
systems with the same fixed size and fixed information content,
howsoever defined.
For heterogeneous systems, we will refer to the resulting distributions
as the heterogeneous CoHSI distribution. The corresponding distribution
for homogeneous systems is simply Zipf’s law.
The heterogeneous CoHSI distribution
The theory described in Appendix A p. 36 predicts that the length
distribution of a heterogeneous discrete system such as the proteome or
software systems, at all scales with total number of tokens T and total
Hartley-Shannon Information I is the solution (ti, ai) of the implicit pdf
corresponding to
log ti = ?? ? ?(
d
dti
logN(ti, ai; ai)), (2)
with
T =
M
?
i=1
ti (3)
and
I =
M
?
i=1
Ii (4)
where ti, ai, Ii are the length in tokens, the size of unique alphabet of
tokens and the Hartley-Shannon Information content, respectively, of the
ith component of a system containing M components in all. ? and ? are
12
Lagrange undetermined multipliers. N(ti, ai; ai) is the total number of
ways of choosing ti tokens at random, choosing from a replaceable unique
set of tokens ai. We write N(ti, ai; ai) in this special form to remind us of
the recursive nature of its construction. Here, ti is the independent
variable and ai plays a dual role acting also as the scaled frequency of
occurrence.
In addition, for components which are much longer than their unique
alphabet, ti ? ai, the full solution (2) tends to the asymptotic pdf
(probability distribution function) [23] given by
pi ?
ti
T
=
a??i
?M
i=1 a
??
i
, (5)
which has an algebraic dual pdf [25] given by
qi ?
ai
A
=
t
?1/?
i
?M
i=1 t
?1/?
i
, (6)
where
A =
M
?
i=1
ai (7)
(5) and (6) show that the tails of both unique alphabet size
distributions and length distributions respectively of the M components
will be asymptotically power-law as emphatically confirmed in [25].
A typical solution of (2) is shown as Fig. 2.
 0
 1
 2
 3
 4
 5
 6
 7
 100  200  300  400  500  600  700  800  900  1000
C
o
H
S
I 
F
re
q
u
e
n
c
y
 o
f 
ti
ti
CoHSI solution
Figure 2. A typical solution of (2) shown as a pdf. Both the sharp
unimodal peak and power-law tail can be seen clearly.
Before applying this theory predictively to various systems so that we
may test it, we make two comments.
13
• The Lagrange multipliers ?, ? are undetermined by the
methodology of statistical mechanics.
– ? parameterises the total size of the system and therefore
emerges naturally as a normalisation condition so that a pdf
results.
– ? is more interesting. It parameterises the total payload. The
payload in our theory is Hartley-Shannon information which as
described in Appendix A p. 40, depends on the size of the
alphabet we use to categorise a discrete system. Small
alphabets correspond to large ? and vice versa. The
implication of this indeterminism is that the range of values of
? which emerge via information theory can be much wider
than those tied to physical systems, (which are mostly in the
range 1.5-4). (In the Maxwell-Boltzmann distribution where
the payload is energy, Appendix A p. 36, it is fixed by being
closely linked by Boltzmann’s constant to the temperature,
through the Second Law of Thermodynamics.)
• Dual regime behaviour is often identified and modelled as
lognormal transitioning to power-law [37, 39]. We stress here that
no such juxtaposition of distinct pdfs is necessary with the theory
presented here. Instead the sharp unimodal peak and the power-law
regime of Figs. 1a, 1b naturally emerge according to the implicit
solution of (2) as ti ? 1 from large values as can be seen in Fig. 2.
This is a direct consequence of CoHSI in an ergodic system as
described in Appendix A p. 40. The observed shape of the sharply
unimodal regime of Fig. 1a simply lends itself to a lognormal fit.
We also note that the unusual implicit behaviour inherent in (2) is
also a feature of modified entropy definitions such as Tsallis
entropy [66, 67] constructed to account for non-additive entropy.
Tsallis entropy is a modification of Shannon entropy with an
additional parameter. In our development, the implicit behaviour
emerges naturally from the one assumption of CoHSI.
We now apply these conclusions predictively to various systems.
14
Results
Proteins
Proteins are constructed as strings of amino acids corresponding to the
heterogeneous model we describe here, Appendix A p. 40. They are
represented in exactly the same way as the strings of letters in Table 2
but the unique alphabet from which the letters are chosen is the 22
unmodified amino acids which are coded directly from DNA [16,60],
supplemented with modified versions produced by a process known as
Post-Translational Modification, of which there are already thousands
known [5, 31, 46]. Table 3 shows two small proteins, one from an
Archaean and the other from a virus [64] along with their sequences in
their single letter abbreviations for compactness [25]
Protein Sequence
FLA1 METHU FSGLEAAIVL IAFVVVAAVF
(Methanospirillum hun-
gatei)
SYVMLGAGFF AT
VE5 PAPVR MNHPGLFLFL GLTFAVQLLL
(Reindeer papillomavirus) LVFLLFFFLV WWDQFGCRCD
GFIL
Table 3. Sequences of two small proteins.
Biologically, these two proteins differ significantly. They have different
lengths, (32 and 44 amino acids respectively); are built using different
amino acids; and they have very distinct structures and functions.
FLA1 METHU is built from the unique amino acid alphabet
FSGLEAIVLYMGT (13) and VE5 PAPVR is built from the unique
amino acid alphabet MNHPGLFTAVQWDCRI (16). Following our
earlier argument about unique alphabets, it does not matter if an amino
acid is present once or more often in the sequence. If it is present at all,
then it contributes a count of 1 to the unique amino acid count. While
these two numbers are clearly independent of any physicochemical
properties of the amino acids, they are fundamental in determining the
length distribution of any aggregation of proteins.
The protein sequences are collected in public databases from which
they can be downloaded and analysed [64]. There are currently more
than 80 million proteins in TrEMBL version 17-03 built from almost 27
billion amino acids, (the most recent version analysed before writing this
paper). The proteins vary in length from just four amino acids to over
36,000 amino acids but their average length is only around 300 amino
15
acids. The reason for the existence of such long proteins is directly
predicted by the development of theory which follows later in this paper,
Appendix B, p. 53.
The length of a protein is of course one of the factors which determines
its folding properties and therefore its functionality [29, 32, 34].
Power-law tails of alphabet and length
As originally shown in [25], the tails of the alphabet and length
distributions are both power-law to a high degree of precision. The
protein alphabets are analysed in Appendix C p. 55.
The ccdf (complementary cumulative distribution function) of the
length distribution corresponding to Fig. 1a is shown as Fig 3.
 1
 10
 100
 1000
 10000
 100000
 1e+06
 1e+07
 1e+08
 1  10  100  1000  10000  100000
A
b
u
n
d
a
n
ce
 o
f 
p
ro
te
in
s 
in
 T
re
m
b
l
Protein length
Figure 3. The data of Fig. 1a shown as a log? log ccdf.
The linearity in the tail of Fig. 3 provides striking confir-
mation of equation (6). The R lm() function reports that
the associated p-value matching the power-law tail linear-
ity is < 2.2× e?16 over the range 300.0? 30000.0, with an ad-
justed R-squared value of 0.9942. The slope is ?3.13± 0.20.
Aggregations by domain and species
As stated earlier, the canonical shape of Figs. 1a, 1b occurs at each level
of aggregation in these systems. This we now show for both the domains
of life and also down to individual species.
In contrast to TrEMBL, the SwissProt database [63] provides a smaller
but well annotated set of data suitable for the extraction and analysis of
data from taxa at diverse levels of aggregation, from the highest
16
taxonomic classification shown (the three domains of life) down to
individual species. In Figs. 4a-4d: are Archaea (Figs 4a: 19,063 species),
Bacteria Figs (4b: 329,526 species) and Eukarya Figs 4c: 177,020 species).
Included for comparison are the viruses Figs (4d: 16,423 species). In
every case, the characteristic qualitative signature of Fig. 1a is evident in
the domain of life (with variations inevitably depending on the sample
size), and even (in the case of viruses), a dataset outside the domains of
life. The pdfs are scaled separately to show the qualitative similarity
whilst Fig. 5 shows the matching absolutely-scaled ccdfs and the
emergence of the power-law tail in each collection.
A
 0
 20
 40
 60
 80
 100
 0  500  1000  1500  2000  2500  3000  3500  4000  4500  5000
F
re
qu
en
cy
 o
f A
R
C
H
A
E
A
 p
ro
te
in
s
Protein length
B
 0
 200
 400
 600
 800
 1000
 1200
 0  1000  2000  3000  4000  5000  6000  7000  8000
F
re
qu
en
cy
 o
f B
A
C
T
E
R
IA
 p
ro
te
in
s
Protein length
C
 0
 50
 100
 150
 200
 250
 300
 350
 400
 0  1000  2000  3000  4000  5000  6000  7000  8000  9000  10000
F
re
qu
en
cy
 o
f E
U
K
A
R
Y
O
T
A
 p
ro
te
in
s
Protein length
D
 0
 10
 20
 30
 40
 50
 60
 70
 80
 0  1000  2000  3000  4000  5000  6000
F
re
qu
en
cy
 o
f V
IR
U
S
 p
ro
te
in
s
Protein length
Figure 4. The frequency distributions of protein lengths in the three
domains of life, (A): Archaea, (B): Bacteria and (C): Eukarya, along with
(D): Viruses.
17
 1
 10
 100
 1000
 10000
 100000
 1e+06
 10  100  1000  10000
F
re
q
u
e
n
cy
 o
f 
p
ro
te
in
s
Protein length
ARCHAEA
BACTERIA
EUKARYOTA
VIRUSES
Figure 5. The three domains of life and viruses shown as a log? log
ccdf. The significantly shallower slope in Viruses is notable.
The only remaining approximation of CoHSI is that the number of
components (i.e. proteins in this case) be reasonably large, so a critical
test case is the analysis of individual species, where the protein databases
allow us to analyze small sets of proteins naturally defined by species. To
demonstrate the resilience of CoHSI, we consider species with very
different numbers of unique proteins. Figs. 6a-6d show the length
distributions of proteins in (Fig. 6a) humans (126,468 proteins); (Fig. 6b)
maize (85,311 proteins); (Fig. 6c) fruit fly (18,966 proteins); and (Fig.
6d) Haloarcula marismortui (3,892 proteins) respectively. Even in the
smallest of these datasets, H. marismortui, a halophilic red Archaeon
found in the extreme environment of the Dead Sea, the canonical shape
of Fig. 1a is apparent. The pdfs are again scaled separately to show the
qualitative similarity whilst the corresponding ccdfs are shown absolutely
scaled in Fig. 7.
18
A
 0
 100
 200
 300
 400
 500
 0  1000  2000  3000  4000  5000  6000  7000  8000
A
bu
nd
an
ce
 o
f H
U
M
A
N
 p
ro
te
in
s 
in
 T
re
m
bl
Protein length
B
 0
 50
 100
 150
 200
 250
 300
 0  1000  2000  3000  4000  5000  6000  7000  8000
F
re
qu
en
cy
 o
f M
A
IZ
E
 p
ro
te
in
s
Protein length
C
 0
 10
 20
 30
 40
 50
 60
 70
 80
 0  1000  2000  3000  4000  5000  6000  7000  8000
A
bu
nd
an
ce
 o
f D
R
O
S
I p
ro
te
in
s 
in
 T
re
m
bl
Protein length
D
 0
 2
 4
 6
 8
 10
 12
 14
 16
 18
 20
 0  500  1000  1500  2000  2500
A
bu
nd
an
ce
 o
f H
A
LM
A
 p
ro
te
in
s 
in
 T
re
m
bl
Protein length
Figure 6. The frequency distributions of protein lengths in four species,
(A): Human, (B): Maize and (C): Fruit fly, along with (D): Haloarcula
marismortui.
 1
 10
 100
 1000
 10000
 100000
 1e+06
 10  100  1000  10000
F
re
q
u
e
n
cy
 o
f 
p
ro
te
in
s
Protein length
HUMAN
MAIZE
DROSOPHILA
H. MARISMORTUI
Figure 7. Four species shown together as a log? log ccdf.
Computer programs
Computer programs are an invention of the human mind following the
ground-breaking work of Alan Turing. In the 50 or so years since they
first appeared, many programming languages have arisen, from which
computer programs of almost limitless functionality are built.
19
The individual bases or alphabet of a programming language are called
tokens and may take two forms; the fixed tokens of the language as
provided by the language designers, and the variable tokens. Fixed
tokens include (in the languages C and C++ for example) keywords such
as if, else, while, {, }. These can not be changed, the programmer can
only choose to use them or not. Variable tokens, with some small lexical
restrictions (such as the common requirement for identifiers to begin with
a letter), can be arbitrarily invented by the programmer whilst
constructing their program. These might be names such as
numberOfCandidateCollisions or lengthOfGene or constants such as
3.14159265. There are many programming languages but all obey the
same principles and every form of software system evolves from such
tokens. They are therefore another example of the heterogeneous model
we describe here, Appendix A p. 40.
It should be noted that classifying programs in terms of fixed and
variable tokens is not new and appeared at least as early as 1977 in the
influential work of Halstead who called them operators and operands, [19].
He developed his work to define various dependent concepts such as
software volume and effort and tested them against programs of the time.
This was further elaborated by Shooman [56]. A different approach is
used here which borrows from the methods of variational calculus.
Computer programs are often huge. The software deployed in the
search for the recently discovered Higg’s boson comprises around 4
million lines of code [50]. At an average of around six tokens per line of
code, this corresponds to some 20 million tokens, although this is still less
than 1% of the human genome in which the tokens are the four bases
adenine, cytosine, guanine and thymine. The largest systems in use today
appear to be around 100 million lines of source code [40], corresponding
to perhaps 15% of the number of tokens of the human genome. The
(largely) open systems used to test the model described here total almost
100 million lines, (specifically 98,476,765 lines), totalling some 600 million
tokens. (If around 6 tokens per line seems a little low, it should be
recalled that lines of code include comment lines here in line with
common practice, whilst token counts do not.)
As an example of the nomenclature used here, consider the following
simple sorting algorithm written in C, for example [52].
void bubble( int a[], int N )
{
int i, j, t;
for( i = N; i >= 1; i--)
{
for( j = 2; j <= i; j++)
{
20
if ( a[j-1] > a[j] )
{
t = a[j-1];a[j-1] = a[j];a[j] = t;
}
}
}
}
This algorithm contains 94 tokens in all based on 18 of the fixed
tokens and 8 of the variable tokens of ISO C, so the size of the unique
alphabet for this component is 18 + 8 = 26.
Note that extracting the tokens of programming languages to assemble
these measures requires the development of compiler front-end
tools [1, 51]. These are included in the reproducibility materials, notably
associated with [23].
Power-law tails of alphabet and length
We have from (5) and (6) that power-laws in both the unique alphabet
distributions and length distributions are overwhelmingly likely to appear
in the tails of the distributions. Figs. 8a and 8b show the log? log ccdf
plots for the unique alphabet and length distributions respectively of 100
million lines of source code in seven different programming languages [23].
A
 100
 1000
 10000
 100000
 1x106
 10  100  1000
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
>
 a
i
ai (tokens)
B
 10
 100
 1000
 10000
 100000
 1x106
 10  100  1000  10000  100000  1x106
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
>
 t
i
ti (tokens)
Figure 8. The unique alphabet ai (A) and length distributions ti (B) of
100 million lines of source code in 7 different programming languages
shown as ccdfs.
21
The linearity in each tail is striking confirmation of (5) and
(6). For Fig. 8a, R lm() reports that the associated p-value
matching the power-law tail linearity is < 2.2 × e?16 over
the range 80.0 ? 3500.0, with an adjusted R-squared value
of 0.9975. The slope is ?2.15 ± 0.08. For Fig. 8b, R lm()
reports that the associated p-value matching the power-law
tail linearity is < 2.2 × e?16 over the range 200.0 ? 68000.0,
with an adjusted R-squared value of 0.9995. The slope is
?1.47± 0.03.
We note in passing that (5) and (6) suggest that the slopes are
reciprocals of each other, (? and 1/?). They are clearly not so here but
this raises an interesting question concerning the choice of alphabets
which is explained in the Appendix C p. 56.
Aggregations by language and package
Although the collections of software available for analysis are many fewer
than for proteins, we can still identify, in software, collections equivalent
to the domains of life on the basis of software written in different
programming languages. Figs. 9d-9b illustrate the length distributions of
collections of components (software functions) in four programming
languages (Fig. 9a C++ 22,628 components; Fig. 9b Java 32,552
components; Fig. 9c Fortran 14,028 components and Fig. 9d Ada 12,680
components). Despite the disparity in their sizes, each of these collections
again shows striking similarity to the canonical form of length
distributions of Figs. 1a and 1b, as predicted by (2) and manifest in
proteins, as we have already seen. In each case, the values in the x-axis
scale are the same whilst the y-axis is scaled according to the size of the
packages to make the peaks of approximately the same vertical extent.
22
A
 0
 50
 100
 150
 200
 250
 0  200  400  600  800  1000  1200  1400  1600  1800  2000
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
ti
ti (tokens)
B
 0
 20
 40
 60
 80
 100
 120
 140
 160
 180
 200
 0  200  400  600  800  1000  1200  1400  1600  1800  2000
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
ti
ti (tokens)
C
 0
 20
 40
 60
 80
 100
 120
 140
 160
 180
 0  200  400  600  800  1000  1200  1400  1600  1800  2000
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
ti
ti (tokens)
D
 0
 20
 40
 60
 80
 100
 120
 0  200  400  600  800  1000  1200  1400  1600  1800  2000
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
ti
ti (tokens)
Figure 9. The length distributions of functions in large collections of
software in four programming languages, (A): C++, (B): Java (C):
Fortran and (D): Ada.
Again, there are considerable differences in scale compared with that
of proteins, but we can still identify in software collections equivalent to
species on the basis of software written for individual applications. Figs.
10a-10d illustrates the length distributions of collections of software
functions in four applications of very different sizes, in four different
programming languages (Fig. 10a, The Gimp image manipulation
program (ISO C) 18,693 components; Fig. 10b, The KDE desktop
libraries (C++) 16,241 components; Fig. 10c, The Eclipse interactive
Development Environment (Java) 9,588 components and Fig. 10d, The
gcc Ada compiler (Ada) 3,765 components). Once again, despite the
disparity in their sizes, each of these collections again shows striking
similarity to the canonical form of length distributions exhibited by Figs.
1a, 1b. In this case, the x-axis scale is the same whilst the y-axis is again
scaled according to the size of the packages to normalise the size of the
peaks approximately.
23
A
 0
 50
 100
 150
 200
 250
 500  1000  1500  2000  2500  3000  3500  4000
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
ti
ti (tokens)
B
 0
 20
 40
 60
 80
 100
 120
 140
 160
 180
 200
 500  1000  1500  2000  2500  3000  3500  4000
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
ti
ti (tokens)
C
 0
 10
 20
 30
 40
 50
 60
 70
 500  1000  1500  2000  2500  3000  3500  4000
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
ti
ti (tokens)
D
 0
 5
 10
 15
 20
 25
 30
 35
 40
 500  1000  1500  2000  2500  3000  3500  4000
#
 C
o
m
p
o
n
en
ts
 w
it
h
 v
al
u
e 
ti
ti (tokens)
Figure 10. The length distributions of functions in four packages each in
different programming languages, (A): Gimp (ISO C), (B): kdelibs
(C++), (C): Java (Eclipse) and (D): Ada (GCC).
Music
CoHSI also predicts the length distributions of musical compositions.
Much of the theory and discussion is deferred to Appendix C p. 56. We
will simply point out here that modern digital formats for musical
annotation such as MusicXML4 allow us to apply the heterogeneous
theory described in Appendix A p. 40, to yet another distinct discrete
system where, in this case, the components are pieces of music and the
unique alphabet comprises of notes as shown in Table 1.
Extracting the appropriate data is fortunately relatively simple
compared with the daunting task of extracting possibly
post-translationally modified amino acids in proteins or programming
language tokens in computer programs, as the following XML snippet5
taken from “Nun danket alle Gott”, (Words Rinkart 1636, Music Cru?ger,
1647) shows.
<part id="P1">
<measure number="1">
4https://en.wikipedia.org/wiki/MusicXML, accessed 07-Jul-2017
5https://hymnary.org/media/fetch/99378, accessed 07-Jul-2017
24
...
<note>
<pitch>
<step>E</step>
<alter>-1</alter>
<octave>4</octave>
</pitch>
<duration>480</duration>
<voice>1</voice>
...
This snippet refers to the note Eb in the 4th octave (middle C is
annotated C4, so this is a minor third above middle C). The duration
must be determined from other parameters in the XML but this note
actually corresponds to a 1/4 note or crotchet.
Arguably the most beneficial aspect of studying music from the point
of view of this paper, however, is that it provides a simple example of
when there are multiple candidate unique alphabets, for example, whether
or not to include musical note duration as well as pitch in defining the
alphabet. When we first considered this aspect, the potential ambiguity
worried us until we eventually realised that it led naturally and elegantly
to the important conclusion, proved in Appendix C p. 56 and verified
experimentally, that all consistent unique alphabets are themselves related
by a power-law.
In this study, we used 883 pieces of music, mostly classical but a very
eclectic mix of chorales, piano concertos, horn duets, blue-grass music
and indeed almost anything in an XML format we could get our hands
on. This process was not as simple as accumulating large amounts of
open source code unfortunately and took some considerable time and
manual effort. As a result, this is by far the smallest system we consider
and does not therefore allow us much scope to demonstrate different sized
aggregations. Even so, the length distribution of these 883 pieces of music
is still gratifyingly suggestive of the presence of the predicted canonical
distribution as shown in Figs. 11a-11b.
25
A
 0
 5
 10
 15
 20
 25
 0  5000  10000  15000  20000  25000
A
bu
nd
an
ce
 o
f m
us
ic
 p
ar
ts
Total length in notes
B
 10
 100
 1000
 1  10  100  1000  10000
A
bu
nd
an
ce
 o
f m
us
ic
 p
ar
ts
Total length in notes
Figure 11. The length distribution of the 883 pieces of music analysed
shown as a pdf (A) and a ccdf (B).
An R lm() analysis on the tail of Fig 11b reports that the
associated p-value matching the power-law tail linearity in
the ccdf of Fig. 14 is < 2.2 × e?16 over the range 100.0 ?
10000.0, with an adjusted R-squared value of 0.9936. The
slope is ?1.66± 0.08.
The written word
The pioneering work which first suggested the ubiquity of power-laws in
texts was that by George K. Zipf [73]. Zipf showed empirically that if the
frequency of occurrence of words in a text were plotted in rank order on a
log? log ccdf, a power-law in frequency was observed. This is an example
of a system of homogeneous boxes, Appendix A p. 50, where we give a
proof of Zipf’s law using the methodology of this paper.
Archetypal examples of this at different scales are shown in Figs.
12a-12d. These show respectively, (Fig. 12a The Mitre Common
Vulnerabilities database 2,410,350 words6; Fig. 12b The complete works
of Shakespeare 948,516 words; Fig. 12c The King James Bible in Swedish
807,969 words and Fig. 12d the classic English text “Three Men in a
Boat” published by Jerome K. Jerome in 1889 67,435 words)7. The
classic straight line signature of the power-law is evident in each case
even though the datasets are different in size by a factor of 40 from
largest to smallest.
6https://cve.mitre.org/,accessed01-May-2015
7https://www.gutenberg.org/,accessed01-Jul-2017
26
A
 1
 10
 100
 1000
 10000
 100000
 1  10  100  1000  10000  100000  1x106
fr
eq
ue
nc
y
Rank
B
 1
 10
 100
 1000
 10000
 100000
 1  10  100  1000  10000  100000
fr
eq
ue
nc
y
Rank
C
 1
 10
 100
 1000
 10000
 100000
 1  10  100  1000  10000  100000
fr
eq
ue
nc
y
Rank
D
 1
 10
 100
 1000
 10000
 1  10  100  1000  10000
fr
eq
ue
nc
y
Rank
Figure 12. The rank ordered word distributions in, (A): The Common
Vulnerabilities database, (B): The complete works of Shakespeare, (C):
The King James Bible in Swedish and (D): Jerome K. Jerome’s “Three
Men in a Boat”.
Before leaving this section, we point out that some systems can in fact
be characterised both by using the homogeneous model, Appendix A p.
50, and also using the heterogeneous model, Appendix A p. 40. It would
therefore provide substantial additional support for the generality of the
information model we propose in this paper if both the homogeneous
model predictions and the heterogeneous model predictions held for a
system in which both could be used. There is no conflict between
information measures here even though they are different, provided they
are consistently applied.
Treating the words of a text as indivisible as we have done above yields
the homogeneous model where word frequency follows the predicted Zipf
power-law in rank, and we have already seen that the homogeneous model
predicts exactly this long-established behaviour, Appendix A p. 50.
It is also possible to consider the individual words of a text as being
further sub-divided into their letters as a heterogeneous model, just as if
each word were a protein built from a unique alphabet, which in English,
is 26 letters. Word length has been studied extensively for various
languages, for example [58], however for our purposes, we expect by
analogy with our protein studies, that applying the heterogeneous model
27
to word-length frequency will yield the canonical distribution seen in Fig.
1a for example.
Fig. 13a shows the word-length frequency for the text “Three Men in
a Boat” whose word frequency is shown in Fig. 12d. Even though the
x-axis is limited to a maximum word length of around 40 in this novel (it
includes single- and, unusually, double- hyphenated words such as the
archaic currency reference “two-pounds-ten”), the canonical shape is once
again evident with a sharp unimodal peak and as can be seen in Fig. 13b,
good evidence of the predicted power-law tail. The steep slope is
associated with a relatively small alphabet as described in Appendix D, p.
61.
An R lm() analysis on the tail of Fig. 13b reports that the
associated p-value matching the power-law tail linearity in
the ccdf of Fig. 14 is 2.303× e?15 over the range starting at
the mode 5.0 ? 30.0, with an adjusted R-squared value of
0.9853. The slope is ?6.40± 0.32.
A
 0
 2000
 4000
 6000
 8000
 10000
 12000
 14000
 16000
 18000
 0  10  20  30  40  50  60  70  80
fr
eq
ue
nc
y
length
B
 1
 10
 100
 1000
 10000
 100000
 1  10  100
fr
eq
ue
nc
y
length
Figure 13. The text “Three Men in a Boat” with each word considered
as a component and the frequency of occurrence of length of word plotted
as a pdf (A) and as a ccdf (B).
28
We believe this adds considerable weight to the
information-theoretic arguments of this paper. In this
case, the same system, treated using two different mod-
els of information (the homogeneous case of word frequen-
cies and the heterogeneous case of letter frequencies and
word lengths) obeys the predictions of both models, show-
ing that consistent but different measures of information
within the same system lead to valid predictions for the
different distributions. In both cases, conserving Hartley-
Shannon information in an ergodic system is the underly-
ing mechanism.
The atomic elements
The distribution of atomic elements in the universe is a similar system to
that of word frequencies and we use the homogeneous model, Appendix p.
50. Again, the components each consist of one type only, in this case
atoms of each element and, intrigued by its apparent preponderance we
chose to include current estimates of dark material, i.e. energy and
matter. The frequencies of occurrence, Fig. 14, have been taken from
NASA8 and Wikipedia9.
0.00000001
0.00000100
0.00010000
0.01000000
1.00000000
100.00000000
 1  10  100
R
e
la
tiv
e
 a
b
u
n
d
a
n
ce
i (Atomic Number+2)
Figure 14. The frequency of occurrence of the elements in the universe
supplemented by estimates of dark energy (data point 1) and dark matter
(data point 2) shown as a log? log ccdf.
The distribution of elements fits well on the predicted power-law
8https://map.gsfc.nasa.gov/universe/uni_matter.html, accessed 29-Jun-2017
9,https://en.wikipedia.org/wiki/Abundance_of_the_chemical_elements, ac-
cessed 29-Jun-2017
29
distribution for homogeneous boxes, where the rank ordering turns out to
follow the atomic number. (The relationship with atomic number is
outwith the theory described here.)
An R lm() analysis on this tail reports that the associated
p-value matching the power-law tail linearity in the ccdf
of Fig. 14 is < 2.2 × e?16 over the range 1.0 ? 85.0, with an
adjusted R-squared value of 0.9779. The slope is ?6.80±0.94.
Intriguingly, the observed amount of dark energy (first point Fig. 14)
and dark matter (second point Fig. 14) fit the predicted homogeneous
box distribution well, suggesting that from the point of view of CoHSI,
dark matter corresponds to something with an atomic number of zero (a
re-generating sea of neutrons ?) and dark energy corresponds to
something with an atomic number of -1 (?); so that’s something for the
theorists to chew on.
On a much smaller scale than Fig. 14, the characteristic straight line
signature is again visible in the distribution of the elements in seawater10,
Fig. 15, not in this case including dark material.
0.0000000010
0.0000000100
0.0000001000
0.0000010000
0.0000100000
0.0001000000
0.0010000000
0.0100000000
0.1000000000
1.0000000000
 1  10  100
R
e
la
tiv
e
 a
b
u
n
d
a
n
ce
i (Atomic Number)
Figure 15. The frequency of occurrence of the elements in sea water
shown as a log? log ccdf.
Even though the tail is short, an R lm() analysis on this tail
reports that the associated p-value matching the power-law
tail linearity in the ccdf of Fig. 14 is < 2.2 × e?16 over the
range 10.0?72.0, with an adjusted R-squared value of 0.9963.
The slope is ?8.82± 0.29.
10https://en.wikipedia.org/wiki/Abundances_of_the_elements_(data_page),
accessed 29-Jun-2017
30
Conclusions
This paper, through theory and testing against multiple datasets of
different provenance and levels of aggregation, makes the case that a
conservation principle derived from information theory (Conservation of
Hartley-Shannon Information) operates within all discrete systems
to impose important and common structural properties on length and
unique alphabet size distributions. By development of a statistical
mechanics argument in which we consider ergodic ensembles with a fixed
number of tokens and a fixed total H-S information content, independent
of the meaning of the tokens chosen without bias, we demonstrate that
the length and unique token alphabet for components of discrete systems
are inextricably linked by a canonical distribution - the heterogeneous
CoHSI distribution (2) - visible in all aggregations and at all scales where
numbers are sufficiently large for statistical mechanics to operate. The
two Lagrange multipliers which naturally emerge ?, ? are undetermined
and simply parameterise the range of possible solutions.
This has a number of interesting implications which we will divide into
levels of confidence based on the data analysis, distinguishing in each case
whether this is a heterogeneous system, Appendix A p. 40 (which has a
canonical distribution (2)) or a homogeneous system, Appendix p. 50
(which has a canonical distribution (39) corresponding to Zipf’s law) or
both, recalling that such systems differ only in the relevant definition of
Hartley-Shannon information.
Very confident
These conclusions are strongly supported by statistical analysis using R
and documented individually in the body of the paper. Where linear
analysis was done on a power-law tail, this is noted below as (R). All 14
such analyses gave an adjusted R2 within the range 0.970? 0.999 with
values of p < e?14.
•
All heterogeneous systems will tend to the canonical frequency dis-
tribution (2) as total size grows, with a sharp unimodal peak and
a power-law tail.
Justification Equation (2). Development starting Appendix A p.
40.
Evidence Fig. 1a (Proteins); Fig. 1b (Software); Fig. 11a (Music);
Fig. 13a (Texts) (R)).
31
•
All heterogeneous discrete systems made up from components,
themselves comprising indivisible tokens chosen from an alphabet,
will exhibit a precise power-law tail in both their length distribution
and in the distribution of their unique alphabet.
Justification Length: Eq. (6), Alphabet: Eq. (5). Development
starting at Appendix A p. 40 and also p. 42.
Evidence Length: Fig. 3 (Proteins); Fig. 8b (Software); Fig. 11b
(Music), (R). Alphabet: Fig. 24 (Proteins); Fig 8a (Software);
Fig. 23a (Music), (R).
•
The canonical CoHSI distribution (2) tends to the asymptotic solu-
tion found in [25].
Justification Appendix A p. 43 onwards.
Evidence Figs. 19a, 19b, example solutions of equation (2).
•
The canonical frequency distribution will appear in all aggregations
of a system.
Justification The theory for both heterogeneous systems and
homogeneous systems is scale independent. It finds the most
likely length distribution for a given total size T and a given
total heterogeneous or homogeneous Information I, but other
than requiring a reasonably large system in the general sense
of Statistical Mechanics [17], does not depend on the values of
T or I. Appendix A p. 43 onwards.
Evidence Heterogeneous systems, Figs. 4a-4d, Figs. 6a-6d
(Proteins); Homogeneous systems, Figs. 12a-12d (Texts); Figs.
14, 15 (Atomic elements).
•
The canonical frequency distribution will appear in all qualifying
discrete systems independently of their provenance.
Justification At the heart of the definition of Hartley-Shannon
Information is the original prescient advice from Ralph Hartley
that the meaning of the tokens is irrelevant.
Evidence Heterogeneous systems, Fig. 1a (Proteins), Fig. 1b
(Software), Fig. 11a (Music), Fig. 13a (Text); Homogeneous
systems, Figs. 12a-12d (Text), Figs. 14, 15 (Atomic Elements).
•
If a system can be considered as both a heterogeneous system and a
homogeneous system, then the predictions for both kinds of system
will appear.
32
Justification Only a different definition of information is needed.
The mechanism of statistical mechanics then automatically
generates the relevant length distribution, Appendix A p. 40
and p. 50.
Evidence Heterogeneous system, Fig. 13b (Lengths of words in a
text); Homogeneous systems, Fig. 12d (Rank-ordered word
frequency in text) (R).
•
The alphabet used to categorise a heterogeneous system is irrelevant
provided it is consistent.
Justification Consistent alphabets are power-laws of each other
asymptotically for large components, Appendix C p. 56
onwards.
Evidence Figs. 23a, 23b (Duration and no-duration notes in
Music) (R).
•
Average component length is highly preserved across collections in
heterogeneous systems.
Justification This is a direct consequence of the sharply unimodal
shape of the canonical Distribution for heterogeneous systems.
Evidence Figs. 22a, 22b (Proteins) (R), from [25]). This is also
reported for software [23].
• Unusually long components are inevitable in heterogeneous systems.
Justification Such components are inevitable because of the
presence of the ubiquitous power-law tail, (noting the
comments of [11]).
Evidence Fig. 3 (Proteins) which shows for example,
approximately 10,000 proteins longer than 10 times the
average length.). This phenomenon has also been reported for
software [43].
Confident
• We expect to see the numbers of known amino acids to expand with
time to preserve the power-law tail already evident in Fig. 25b.
There were around 800 structurally distinct Post Translationally
Modified amino acids known in SwissProt 13-11. There are already
suspected to be thousands more [31]. Our information argument
strongly supports this thesis and may indeed help to quantify it.
33
Speculative
• We find it intriguing that the power-law slope of virus protein
lengths is quite different from those observed in the three domains
of life. We speculate that this relates to their unique alphabet.
• The asymptotic behaviour for large components (20) in
heterogeneous systems, implies that tokens carry a payload of the
average information content of the component in which they appear.
For example, in proteins a particular amino acid might carry a
different information payload in different proteins by virtue of the
company it keeps. We do not know if this has any useful physical
interpretation.
• We (wildly) speculate that since both dark energy and dark matter
lie on the same information theoretic distribution as the elements in
order of atomic number, there is an undiscovered but intimate
relationship between dark material and atomic number.
It is clear from the above results that important structural features of
discrete systems are well-predicted by a single conservation principle
applied to ergodic systems at all levels of aggregation and of all kinds.
Nothing more is asked of the theory than that the size of the systems
should be sufficiently large that the methodology of Statistical Mechanics
can be applied.
That the above features need not depend for explanation on any
mechanism of natural selection in the case of proteins or anything to do
with human volition in the case of either music or software, we find
remarkable. Instead, they simply manifest themelves as emergent
properties of heterogeneous or homogeneous large systems of components,
revealed when we consider an ergodic ensemble of the same size and H-S
information content, from which we seek the most likely distribution of
its component lengths using the methodology of this paper.
Acknowledgements
• Competing Interests: The authors declare that they have no
competing financial interests.
• Correspondence: Correspondence and requests for materials
should be addressed to Les Hatton (email: lesh@oakcomp.co.uk).
• This material is based on work supported in part by the National
Science Foundation. Any opinion, finding, and conclusions or
recommendations expressed in this material are those of the authors
34
and do not necessarily reflect the views of the National Science
Foundation.
Although some parts of this paper are published [22, 23, 25], the main
body of the paper, the lower and upper bounds on the implicit canonical
pdf (the heterogeneous CoHSI distribution), the relationship between
alphabets and most of the empirical work, appear here for the first time
both to clarify and extend the theory with new results. During review
processes for various journals, the general thesis of this paper that a
simple global principle appears to be responsible for some important
aspects of protein evolution was a bridge too far for most of the reviewers
given these restrictions. This resistance has been noted before in biology
research [15] and publishing inter-disciplinary papers in general remains
much more difficult than it should be.
However, there were some insightful responses for which we are both
very grateful. One anonymous reviewer pointed out an error with the
combinatorics leading up to the chocolate box argument of Appendix p.
43, which opened up a real can of worms (the role of additive partitions)
which was finally resolved by the recursive argument of Appendix A p.
36. Yet another reviewer made us really think about the application of
this apparently abstract principle to real systems we can touch and feel,
as well as suggesting we clarify the emergent role of A in the dual
distribution, which we hopefully have in Appendix A p. 42.
We would particularly like to thank Dan Rothman for a whole string
of insights which really helped clarify some of the more opaque sections;
Ken Larner who went through the document with a fine toothcomb
suggesting numerous clarifications; Leslie Valiant for bringing to our
attention Frank’s excellent paper [15]; Alex Potanin and colleagues in
New Zealand for useful comments after an early seminar on this topic.
Any mistakes which remain are our responsibility of course but we
hope that the theory is now sufficiently well explained and its novelty
delineated and that the associated reproducibility packages will help
others to verify the computational aspects and extend it in new
directions.
35
Appendix A: The Conservation of
Hartley-Shannon Information: From
Statistical Mechanics to the Canonical
CoHSI Distribution
Statistical mechanics is a methodology for predicting component
distributions of general systems made from discrete pieces or components
subject to restrictions known as constraints. Such systems include gases
(made from molecules), proteins (made from amino acids), software
(made from programming language tokens) and even boxes containing
beads. Conventionally, constraints are applied by fixing the total number
of pieces and/or the total energy [17].
Statistical Mechanics: Classical use in physics
To illustrate the method, we describe a classical problem of determining
the most likely distribution of particles amongst energy levels.
To see this, the following variational methodology is borrowed from
the world of statistical physics, ( [59] (p.217-); and for an excellent
introduction, see [17]). In the kinetic theory of gases, a standard
application is to find the most common arrangement of molecules
amongst energy levels in a gas subject to various constraints such as a
fixed total number of molecules and fixed total energy. For this, imagine
that there are M energy levels, where the number of particles with energy
level ?i is ti, i = 1, ..,M .
For this system, the total number of ways W of organising the
particles amongst the M energy levels is given by:-
W =
T !
t1!t2!..tM !
, (8)
where
T =
M
?
i=1
ti (9)
The total amount of energy in this system is just the sum of all the
particle energies and is given by
E =
M
?
i=1
ti?i (10)
36
In a physical system, E corresponds to the total internal energy and
the variational method to follow constrains this value to be fixed; i.e.
solutions are sought in which energy is conserved.
Using the method of Lagrangian multipliers and Stirling’s
approximation as described in [17], will give the most likely distribution
satisfying equation (8) subject to the constraints in equations (9) and
(10). This is equivalent to maximising the following variational derived by
taking the natural log of (8). Just as in maximum likelihood theory,
taking the log dramatically simplifies the proceedings, in this case the
factorials, and allows the use of Stirling’s theorem for large numbers.
Also, since it is monotonic, a maximum in log W is coincident with a
maximum in W. This leads to
logW = T log T ?
M
?
i=1
ti log(ti) + ?{T ?
M
?
i=1
ti}+ ?{U ?
M
?
i=1
ti?i} (11)
where ? and ? are the multipliers [17]. In essence, the variational
process envisages varying the contents ti of each of the components until
a maximum of logW is found. The maximum is indicated by taking
?(logW ) = 0, (analogous to finding maxima in differential calculus).
Noting that
• the variational operator ? acts on pure constants such as T log T ,
?T and ?U to produce zero just as when differentiating a constant,
• the product rule of differentiation gives
?(ti log(ti)) = ?ti log(ti) + ti?(log(ti) = ?ti(1 + log(ti)),
• ?i is independent of the variation by assumption,
• T and the ti are ? 1 (to satisfy Stirling’s theorem, although it is
surprisingly accurate even for relatively small values).
This leads to
0 = ?
M
?
i=1
?ti{log(ti) + ?+ ??i} (12)
where ? = 1 + ?. (Further elaboration of this standard technique can
be found in Glazer and Wark [17].)
Finally, (12) must be true for all variations to the occupancies ?ti and
therefore implies
log(ti) = ??? ??i (13)
37
for all i.
Using equation (9) to replace ?, this can be manipulated into the most
likely, i.e. the equilibrium distribution, of particles amongst the M
components.
ti =
Te???i
?M
i=1 e
???i
(14)
Defining pi =
ti
T
means that pi can be interpreted as a probability
density function since it is non-negative everywhere and its sum
everywhere is equal to 1. Then (14) yields
pi =
e???i
?M
i=1 e
???i
(15)
This is a result with a profound interpretation in physics. It states
If we consider all possible systems which share the same
number of particles T and the same total energy U (i.e. en-
ergy is conserved), then given any one example of such a
system, it is overwhelmingly likely to obey (15). In other
words by considering all possible systems with these pa-
rameters and constraining them to have the same T and
U, probability distribution (15) is overwhelmingly likely,
provided the ti are large enough for Stirling’s approxima-
tion to hold.
In this case, the distribution is exponential and exactly as is found in
nature - exponentially fewer particles occupy higher energy levels. All the
above has been known for decades and is extremely successful at
explaining classical systems such as gases and even quantum mechanical
systems; the methodology of statistical mechanics however is exceedingly
versatile, so let us consider a simple model just consisting of boxes of
coloured beads.
Conservation of Hartley-Shannon Information
Identical boxes of beads
Let us put some flesh on the meaning of “overwhelmingly likely” as used
earlier in this paper. Consider now a system of M boxes of identical
beads, where the ith box contains ti beads and M is reasonably large. If
we have T beads in total numbered by sequence, where T =
?M
i=1 ti, so
38
that they are distinguishable by their order, the number of possible ways
of arranging them in each of the M boxes is given by
? =
T !
?M
i=1(ti!)
(16)
Suppose there are M = 10 boxes and T = 100 beads and we simply
assign them one by one to a randomly chosen box. We would be very
surprised if the first box contained all the beads with the others empty,
and the number of ways this can happen according to (16) is
100!/(100!× 0!× 0!..0!) = 1. If each box contains 10 beads however as
shown in Fig. 16, this situation can happen in 100!/(10!× 10!× ..10!)
ways, which is approximately 10100, a gigantic number.
Figure 16. Boxes containing exactly the same number of exactly the
same bead.
In other words, we are overwhelmingly more likely to see equal box
populations than 1 single filled box. In fact statistical mechanics allows
us to prove that, in this case, equal population is by far the most likely
distribution of contents simply by finding the maximum of (16) subject to
a fixed number of T beads in the form
log? = T log T ? T ?
M
?
i=1
{ti log(ti)? ti}
+ ?{T ?
M
?
i=1
ti} (17)
where the constraint on fixing T is controlled by the Lagrangian
parameter ?. Finding the maximum of (17) using the standard ?()
method [17], gives the solution ti ? constant, corresponding to equal box
populations. Frank also demonstrates this in his maximum entropy
formulation [15], p. 9.
39
Heterogeneous boxes of beads
We now describe an extension which is directly relevant to systems such
as the known proteome or computer programs. Consider Fig. 17.
Figure 17. The heterogeneous case where each box contains mixed types
and different numbers of beads. This is relevant to proteins, computer
program functions and the length distribution of words in texts.
Here the boxes contain differently coloured beads. We envisage this as
the ith box containing ti beads selected randomly from a unique alphabet
of ai colours, ordered by sequence. For the proteome, the “colours”
correspond to different amino acids and for software functions they
correspond to different programming language tokens.
Now we utilise the great generality of statistical mechanics by
generalizing the payload to be Hartley-Shannon (H-S) information
content instead of energy [23].
The H-S information content of the ith box Ii, (Appendix p. 65) is
simply the log of the number of ways of arranging the beads in that box,
so that it is guaranteed to contain at least one of each of the ai colours.
H-S information is completely agnostic about what the colours actually
mean, indeed Hartley specifically advised against attaching any meaning
to a token [20]. The only thing that matters is that beads change colour,
so the actual colour is irrelevant and the total H-S information is just the
sum of the information for each box. Presented with such a system, we
can ask what is the most likely distribution of contents for systems for
which both the total number of beads and the total H-S information are
conserved ? We must also recall that proteins and software are both
constructed sequentially so we are considering systems where beads are
distinguishable by the order in which they appear, but the actual order is
irrelevant.
The relevant variational form we must solve is therefore
40
log ? = T log T ? T ?
M
?
i=1
{ti log(ti)? ti}
+ ?{T ?
M
?
i=1
ti}+ ?{I ?
M
?
i=1
Ii} (18)
The only term which is different in this formulation from the classical
solution derived above (11), is the last term on the right hand side of (18).
In the variational methodology, each term has the ?() operation applied
in order to vary the ti and derive the distribution in (12), so we are
interested specifically in
?
(
?{I ?
M
?
i=1
Ii}
)
= ??
M
?
i=1
?(Ii) = ??
M
?
i=1
dIi
dti
?ti, (19)
since I is being held constant.
Now consider what happens when boxes are very large compared with
their unique alphabet, i.e. ti ? ai. In this case, [23], the information
content is
Ii = log(ai × ai × ...× ai) = log(a
ti
i ) = ti log ai (20)
In other words, we select ti times from a choice of ai colours secure in
the knowledge that since ti ? ai, it is very unlikely that any of the ai
colours would be missed out and we therefore meet the requirement of
having exactly ai unique colours.
In this case, (19) becomes
??
M
?
i=1
dIi
dti
?ti = ??
M
?
i=1
d(ti log ai)
dti
?ti = ??
M
?
i=1
(log ai)?ti (21)
(21) fits perfectly into the variational methodology leading to (18),
modifying (13) to give
log(ti) = ??? ? log ai (22)
The analogue of (15) is therefore
pi ?
ti
T
=
a??i
?M
i=1 a
??
i
(23)
To summarize, maximising (16) subject to a fixed total number of
beads T AND a fixed total H-S information I =
?M
i=1 Ii is directly
analogous to maximising (11) with log ai replacing ?i. Like its classical
equivalent (15), (23) is also fundamental. It states
41
In any discrete system satisfying the model described here,
the tail (i.e. large ti) of the distribution of unique alphabets
is overwhelmingly likely to obey a power-law.
Note that by analogy with (11), we can interpret ti log ai as each bead
carrying a payload of log ai, so that even though H-S information is token
agnostic, the beads in a particular box still carry a box-dependent
payload which is a function of the unique alphabet of colours in that box,
ai. This is exactly analogous to ti?i being interpreted as each particle
carrying an energy ?i in classical statistical mechanics. In other words,
each box behaves as if it had a fixed information level log ai determined
by its unique alphabet. In a protein for example, this has the intriguing
implication that even though H-S information is token-agnostic, a
particular amino acid in one protein may carry a different information
payload than when present in another protein, simply because its
neighbours are different.
The asymptotic dual distribution
As pointed out by [25], (23) has a dual solution. With some algebra, it
can be shown that
qi ?
ai
A
=
t
?1/?
i
?M
i=1 t
?1/?
i
, (24)
where
A =
M
?
i=1
ai (25)
Note here that A emerges naturally as the sum of the unique alphabets
of each component. It is not the size of the unique alphabet across all
components. This is simply another manifestation of the
token-agnosticism of Hartley-Shannon information - system-wide
uniqueness of the alphabet simply does not emerge as a requirement. The
only requirements for a pdf are that it be positive definite and
normalisable so this in no way detracts from the fact that (24) is also a
power-law. In other words,
The length distribution of large proteins or software func-
tions for which ti ? ai will also be a power-law.
42
Note also the natural appearance of the reciprocal slope 1/?. This
value is not found in the datasets here but this difference is discussed and
we think resolved in the discussion of alphabets in music in the
Appendices p. 56.
The chocolate box analogy and additive partitions: the CoHSI
distribution
For smaller boxes containing fewer beads, the above value of Ii (20) is not
correct. If ti is closer in size to ai, (it cannot be smaller since the length
must be at least equal to the unique alphabet), there is an increasingly
high probability that we might miss out one of the colours in the unique
alphabet as we select our ti beads, negating the fundamental assumption
that each box contains a unique alphabet of exactly ai. We must
therefore make different provisions as the boxes get smaller.
Figure 18. A box of 22 chocolates chosen from 12 different types as
shown on the left.
The situation is akin to boxes of mixed chocolates, Fig. 18. Such
boxes are constructed from a fixed set of chocolates advertised on the lid,
and every box must contain at least one of each. Larger boxes simply
contain more than one of some kinds. In how many ways can such boxes
be created ?
Note that it is simple to find an algorithm to guarantee that the
unique alphabet is exactly ai. All that is necessary is to fill any ai places
with one chocolate of each type and then fill the remaining ti ? ai at
random from the available types. The number of ways of doing this is
(
(ai!).(
tiCai)).(a
(ti?ai)
i
)
, (26)
where nCr = n!/((n? r)!r!) is the combination operator. This however,
is not the same as counting all the possible ways of filling the box such
that it contains exactly ai chocolates.
We are trying to find the number of different ways of filling the ith box
with ti chocolates chosen from a unique set of exactly ai chocolates and
43
we must do this in a way which fits into the statistical mechanical
framework so we can use its methodology.
To explore this, suppose we have a box of ti = 5 chocolates such that it
contains exactly ai = 2 different chocolates of types A and B. The total
number of ways this can be done N(ti, ai), is given by
N(5, 2) =
5!
1!4!
+
5!
4!1!
+
5!
3!2!
+
5!
2!3!
(27)
Note
• The first term on the right hand side of (27) is the total number of
ways of selecting 5 chocolates by using 1 chocolate of type A and 4
chocolates of type B. This is equal to 5 (ABBBB, BABBB, BBABB,
BBBAB, BBBBA).
• The second term corresponds to 4 chocolates of type A and 1 of B
and is also equal to 5 (BAAAA, ABAAA, AABAA, AAABA,
AAAAB).
• The third term corresponds to taking 3 of type A and 2 of type B.
This is equal to 10, (AAABB, AABAB, AABBA, ABAAB,
ABABA, ABBAA, BBAAA, BABAA, BAABA, BAAAB).
• The fourth term corresponds to taking 2 of type A and 3 of type B.
This is also equal to 10, (BBBAA, BBABA, BBAAB, BABBA,
BABAB, BAABB, AABBB, ABABB, ABBAB, ABBBA).
There are no other ways of arranging the box such that there are
exactly 2 colours and exactly 5 chocolates altogether. There are therefore
5 + 5 + 10 + 10 = 30 different such boxes in total. Note that (26) gives
(2!).(5C2)).(2
(5?2)) = 160 boxes. This over-counting is because a box such
as ABBAB could be generated several times by that algorithm, for
example, by filling the first two places with AB and then the rest at
random or by filling the first and third places with AB and the rest at
random.).
The denominators of (27) correspond to elements of the additive
compositions11 of size 2 of the number 5. These are
5 = 1 + 4; 5 = 4 + 1; 5 = 3 + 2; 5 = 2 + 3 (28)
There are other additive compositions such as 2 + 2 + 1, but this
corresponds to three different kinds of chocolate so must be excluded.
11https://en.wikipedia.org/wiki/Partition_(number_theory), accessed 02-
Jun-2017.
44
The fact that the compositions are additive presents a real
complication when merging with the methodology of statistical mechanics
because it breaks the steps leading from (19)-(23) by introducing the log
of a recursive definition as we shall see. Prior to discovery of this
recursive method, the solution was simply trapped between a lower and
upper bound. The lower bound consisted of just one of the terms leading
to the recursive definition and the upper bound was the pure power-law
(23). The recursive method is however far more compelling.
First we slightly modify the definition in (27) by letting N(ti, ai; a
?
i) be
the number of ways of producing a chocolate box with ti chocolates
containing exactly a?i unique types chosen from a total unique number of
types of ai. In this notation, for example, N(5, 2; 1) = 2 and
N(5, 2; 2) = 30. The distinction between ai and a
?
i is to make way for the
use of recursion.
It can be easily verified that the following recursion then generates the
desired total number of ways N(ti, ai; ai) of generating a chocolate box of
ti chocolates from a unique set of chocolates ai.
N(ti, 1; 1) = 1; N(ti, ai; i) =
aiCiN(ti, i; i), i = 1, .., ai ? 1, ai = 1, .., ti
(29)
completed by
N(ti, ai; ai) = a
ti
i ?
ai?1
?
i=1
N(ti, ai; i) (30)
The corresponding Hartley-Shannon information content for a box
containing ti chocolates chosen from a unique alphabet of ai chocolates is
therefore given by
Ii = log
(
N(ti, ai; ai)
)
(31)
In contrast, the equivalent form for the pure power-law (20) is
Ii|P= log
(
atii
)
= log
(
ti log ai
)
(32)
We can now see the problem posed by (31) when we apply the ?()
operator to Ii in the statistical mechanical framework leading from
(19)-(23). The presence of the recursion prevents the clean separation of
factors by the log operation. If we simply solved this computationally,
that would ordinarily be no problem but (31) is computationally difficult
for the large factorial values which arise even for modest values of (ti, ai).
(Whatever method we choose, however, it must have the property of
producing the power-law form (32) in the asymptotic limit ti ? ai.)
45
Applying the ?() operator to (18) using (21) leads to the pure
power-law equation
log ti = ??? ?(log ai), (33)
whereas applying the ?() operator to (18) using (19), (31) leads to the
full equation
log ti = ?? ? ?(
d
dti
logN(ti, ai; ai)), (34)
Here, the unique alphabet ai is playing a dual role as the frequency in
a pdf by analogy with (23) using (24). To complete our chocolate box
analogy, if we are presented with a system of boxes with a total number
of chocolates T chosen from a fixed alphabet of chocolates and a total
H-S information I, then by far the most likely distribution of numbers of
chocolates in any box will be given by a pdf which is the solution of (34).
Finally we note that following the argument that led up to (20), for
ti ? ai,
logN(ti, ai; ai) ? ti log ai, (35)
so the full solution correctly asymptotes to the pure power-law. This
will be confirmed during the computation with both forms being
displayed together.
Computational aspects of the CoHSI distribution
Before we proceed with this, there is a technical limitation to overcome
since the equation for the pdf which results from applying the variational
method to (34) is implicit. As we pointed out in the text, there is a
precedent for this in the definition of Tsallis entropy [66, 67], although in
our case, the implicit nature of the pdf arises naturally from CoHSI. (In
Tsallis entropy, the entropy term is adjusted using an additional
parameter and this adjustment can lead to an implicit pdf.)
We must therefore generalise the argument from integer values of
(ti, ai), to the real line. This will not affect our computation of factorials
however, which are done at integer values of ti, ai, with interpolation for
non-integer values.
(34) defines the canonical implicit pdf with solutions (ti, ai)
which a) conserves H-S information and b) asymptotes to
the pure power-law (5) for ti ? ai as required for any het-
erogeneous system at all scales.
46
Solving (34) proved challenging. The one thing we do know, however,
is that it asymptotes to the simple explicit solution Ii ? ti log ai leading
to (5) when ti ? ai. This suggested the following procedure.
We start with large ti solving (33) explicitly for ai, followed by the use
of this value as the starting value for the full solution of (34). This was
found by searching a pre-computed grid of integer (ti, ai) values for the
appropriate value of d/dti(logN(ti, ai; ai)) interpolating as necessary.
When the solutions are found, we decrement ti and start again. This
process is somewhat akin to shooting methods in boundary layer solutions
in fluid dynamics, [21, 68]. All code used is in the reproducibility package.
Figs. 1a, 1b indicate the behaviour we expect to find if CoHSI is
indeed controlling these distributions. The power-law behaviour for larger
components is already modelled to a high degree of precision by the large
component approximation (20). We focus now on the behaviour for all
component sizes.
The full solution - the solution of (34), and the pure power-law
solution - the solution of (33), using the same parameters, are shown
together at two different scales as Figs. 19a and 19b. The shaded zone
corresponds to the region where the full solution departs from the pure
power-law solution. Note that the the first order approximation for
numerical differentiation means that the first few points for the full
CoHSI solution do not converge. The behaviour is clear from the
remaining points however.
A
 0
 2
 4
 6
 8
 10
 10  20  30  40  50  60  70  80  90  100
F
re
q
u
en
cy
 o
f 
ti
ti
Pure Power-law
CoHSI solution
B
 0
 2
 4
 6
 8
 10
 200  400  600  800  1000  1200  1400  1600  1800  2000
F
re
q
u
en
cy
 o
f 
ti
ti
Pure Power-law
CoHSI solution
Figure 19. The length distributions using the same modelling
parameters for (A) the full CoHSI solution (34), and the pure
(asymptotic) power-law (33) for components smaller than 100 tokens and
(B), the same data for components up to 2,000 tokens long.
We make the following observations about Figs. 19a and 19b with
respect to (34) and (33).
• In (33) as the left hand side decreases with decreasing ti, the value
of ai must increase to give a solution. This gives the pure power-law
47
behaviour shown which continues to increase as ti decreases as
shown clearly in Fig. 19a.
• In (34), d/dti(N(ti, ai; ai) naturally decreases without having to
keep increasing ai as was the case in (33). This is a natural
consequence of CoHSI.
• As can be seen in Figs. 19a, 19b, the qualitative behaviour of the
full CoHSI solution around the unimodal peak remains sharp but is
more rounded than the pure power-law solution and is qualitatively
similar to the software data close up of Fig. 1b shown as Fig. 20.
The sharpness of the peak is related to the boundary condition
naturally emerging in this theory that ti ? ai, i.e., no component
can be shorter than its unique alphabet.
• The peak of the full solution differs slightly in position as well as
their amplitudes as the power-law parameter ? changes. A value of
? = 1.8 was used. As ? increases, the peak moves left and the
amplitude diminishes.
• The full solution naturally asymptotes to the pure power-law
behaviour as required.
We can compare the behaviour around the peak with a close-up of the
dataset of Fig. 1b, as shown as Fig. 20. Even on observed data, the
transition from power-law to near linearity is abrupt, taking place over
perhaps 10 tokens, and is qualitatively very similar to the full CoHSI
solution.
As was noted in the body of the paper, the juxtaposition of dual
regions, one matched by a lognormal distribution and the other by a
power-law has been described in the past, [37, 39]. In our theory, this
transition emerges completely naturally as the implicit solution of (34).
48
 0
 1000
 2000
 3000
 4000
 5000
 6000
 7000
 8000
 9000
 10000
 10  20  30  40  50  60  70  80  90  100
#
 C
o
m
p
o
n
e
n
ts
 w
it
h
 v
a
lu
e
 t
i
ti (tokens)
Figure 20. A close-up around the peak of the measured dataset shown
as Fig. 1b.
To summarise, these results strongly support the thesis of this paper
that the Conservation of Hartley-Shannon Information (CoHSI) acts as a
constraint on how the length and alphabet size distributions of systems of
a given size T and total Hartley-Shannon information I, can evolve at all
scales giving an excellent qualitative match which does not require
juxtaposing existing pdfs of known properties.
Approximate properties of the heterogeneous CoHSI
distribution
From the shape of Figs. 1a, 1b and the theory which led up to Figs. 19a,
19b, we can approximate the distribution satisfactorily by glueing
together a right-angled triangle up to the modal value amax at t = tmax,
say and a power-law afterward because the solution corresponding to (31)
transitions from power-law to almost linear behaviour so quickly. In other
words, we can define the approximate canonical distribution c(t) as
follows
c(t) =
{
( 2(??1)
(t2max(?+1))
)t 0 ? t ? tmax
( 2(??1)
(tmax(?+1))
)( t
tmax
)?? tmax < t < ?
We require ? > 1 for this to be positive definite. This has been
normalised so as to integrate to unity over it’s support [0,?]. This
approximation will allow us to make useful inferences. First we will
calculate the mean location and spread of this distribution.
The mean location is given by
?c? =
2(? ? 1)
(t2max(? + 1))
[
? tmax
s=0
s2ds+ tmax(
1
tmax
)??
?
?
s=tmax
s??+1ds
]
,
49
which is
?c? =
2(? ? 1)
(t2max(? + 1))
[
[s3
3
]tmax
s=0
+ tmax(
1
tmax
)??
[ s??+2
?? + 2
]
?
s=tmax
]
,
and, provided ? > 2, gives
?c? =
2(? ? 1)
(t2max(? + 1))
[
[t3max
3
]
+ ((tmax)
?+1
[
?
t??+2max
?? + 2
]
]
,
and finally
?c? =
2(? ? 1)tmax
(? + 1)
[
1
3
+
1
? ? 2
]
=
2(? ? 1)tmax
3(? ? 2)
; ? > 2 (36)
There is little point in computing higher moments because they place
even greater constraints on the value of ? (they diverge unless the
support for the distribution is a finite interval), and will not apply to our
examples for which 2 ? ? ? 4.5, (recall that if the pdf has slope ??, the
ccdf will have slope ?? + 1 and we are measuring from the ccdf
following [42].).
Applying the above estimate for ?c? to the full Trembl distribution,
Fig. 3, for which ? = 4.14 suggests that ?c?/tmax ? 1, where as analysis
of the data itself in R gives a ratio of around 1.5 which is reasonable
given the nature of the approximation. The actual values from Trembl
are given in Table 4.
Table 4. Different measures of average length of proteins in amino acids
in the full Trembl 17-03 distribution, Fig. 1a
Mean Median Mode
Trembl 335 268 219
Homogeneous boxes of beads: CoHSI and Zipf’s law
There are some kinds of discrete system for which the above information
model does not apply. Consider the case of homogeneous components.
Here, each bead carries a payload such that each box contains only beads
with the same payload, unique to that box. We represent this by
assembling beads of the same colour in the appropriate box, Fig. 21.
We could of course simply set ai = 1 in the heterogeneous case above.
However, this immediately causes problems because the asymptotic
Hartley-Shannon information content of any box in this case would be
ti log 1 = 0 and is simply degenerate. However, because Hartley-Shannon
information is simply the log of the number of ways of arranging the
50
Figure 21. The homogeneous case. In each box, all the beads are the
same but different boxes contain different types and numbers of beads.
This is relevant to the distribution of atomic elements and to the rank
ordering of frequency occurrence of words in texts.
beads of a box, in the absence of an alphabet of choices in each box we
can still find a suitable non-degenerate definition as follows.
Suppose we have a unique alphabet of beads a?i, i = 1, ..,M for the
system as a whole. This is in contrast to the heterogeneous case where
the unique alphabet ai was relevant only to the i
th box. Suppose from
this system-wide alphabet, we seek to fill the M boxes each with ti of the
a?i beads such that each box contains only one type. The total population
of the M boxes is as before T =
?M
i=1 ti. We will renumber them without
loss of generality so that t1 ? t2 ? .. ? tM .
We proceed as follows. Select any box and then fill it by selecting t1
beads of the same colour. Since we are selecting from M different beads,
the probability that we will achieve this selecting at random is (1/M)t1 .
For the second box, we then have an alphabet available of M ? 1, so the
probability of filling this box with only one colour of the remaining
colours is (1/(M ? 1))t2 and so on.
The total number of ways Nh this can be done is then given by this
probability multiplied by the total number of ways in which T beads can
be selected, which is T !.
Nh = T !
[
( 1
M
)t1 ×
( 1
M ? 1
)t2 × ..×
(1
1
)tM
]
= T !
M
?
i=1
(1
i
)ti (37)
Rewriting (37) then, the information content of this system is
logNh = log T ! +
M
?
i=1
ti log
(1
i
)
= log T !?
M
?
i=1
ti log i (38)
The development (19)-(23) then follows but with log i replacing log ai.
51
The end result is the equivalent of (23) and amounts to
ti ? i
??, (39)
where ? is some constant.
(39) states that if we organise these homogeneous boxes in
rank order of contents, (i.e. fullest first), then it is over-
whelmingly likely that they will be distributed as a power-
law in that rank. This is a famous law known as Zipf’s
law [73]. Zipf’s law is empirical although others have pro-
duced statistical derivations [35,57]. The above derivation
therefore serves as an alternative theoretical justification
which places it nicely amongst those distributions which
can be explained by the approach taken in this paper.
52
Appendix B: CoHSI and Implications for
Average Component Length and Long
Components
Average component length
It has been observed experimentally on several occasions [25, 69, 70] that
proteins appear to preserve their average length across aggregations
within relatively tight bounds. The sharply unimodal peak of Figs. 1a, 1b
as predicted by the theoretical development in this paper suggests that
we should not be surprised at this. Indeed at all scales and ensembles the
estimates of average protein length will be highly conserved within
collections as a result, even though the position of the peak may move a
little.
In some aggregations, the degree to which the average length is
preserved is quite remarkable, for example in Bacteria (Fig. 22a), whilst
in Eukarya, there is evidence of some fine structure [25] which invites
further analysis Fig. 22b.
A
 0
 50000
 100000
 150000
 200000
 250000
 300000
 350000
 400000
 0  100  200  300  400  500  600  700  800  900  1000
C
on
ca
te
na
te
d 
le
ng
th
 o
f p
ro
te
in
s 
in
 s
pe
ci
es
Number of proteins in bacteria species
B
 0
 50000
 100000
 150000
 200000
 250000
 300000
 350000
 400000
 450000
 0  100  200  300  400  500  600  700  800  900  1000
C
on
ca
te
na
te
d 
le
ng
th
 o
f p
ro
te
in
s 
in
 s
pe
ci
es
Number of proteins in eukaryota species
Figure 22. A plot of the total concatenated length of proteins against
the total number of proteins for each species in (A) Bacteria and (B)
Eukaryota. Each data point is a species. The gradient of the linearity
evident in both plots effectively defines the average protein length for
that collection, from [25].
We also note that preservation of the average component length has
also been reported for software [23].
Measuring average protein length
The skewed nature of the distribution of Figs. 1a, 1b suggests that the
use of the mean as a measure of average length alone may be misleading
and should be accompanied by other more robust measures such as the
53
median and mode. Table 5 demonstrates this by calculating them for the
three domains of Archaea, Bacteria, Eukaryota, along with Viruses, as
shown in Figs. 4a-4d. As expected, the more robust measure of median is
less affected by the skew and the medians are therefore considerably less
spread out than the means. This is particularly true of viruses which
although they have an anomalously large mean in comparison, their
median is much closer aligned with those of Archaea and Bacteria. The
modes are subject to considerable noise.
Table 5. Different Measures of average length of proteins in the domains
of life and viruses
Domain Mean Median Mode
Archaea 287 246 130
Bacteria 312 272 156
Eukaryota 435 350 379
Viruses 451 289 252
Table 5 shows that the mean is around 1? 3 times the modal value
but we do not compare this using the approximate distribution,
Appendix p. 49, as the data are rather noisier than for the full Trembl
distribution (compare Fig. 5 with Fig. 3).
Long components
One of the most important features of power-laws compared with any
kind of exponential distribution such as the normal distribution is that
“events that are effectively ’impossible’ (negligible probability under an
exponential distribution) become practically commonplace under a
power-law distribution.” [11]. The emphatic power-law in both the
protein lengths and in software function lengths leads to large ratios
when comparing the longest components with the average. For example,
proteins of around 36, 000 amino acids have been found and this is 100×
the average.
In terms of the theory developed here, there is no need
for any biological reason for very long proteins - they exist
simply because of the naturally emerging power-law result-
ing from consideration of Information-conserving ergodic
systems.
We note that precisely the same thing has been observed in
software [43].
54
Appendix C: CoHSI and Token Alphabets
The definition of alphabets, i.e., unique sets of tokens from which choices
can be made, poses interesting questions. First of all, we must point out
that there is generally no obvious definitive unique alphabet for any
system. Alphabets are partly subjective and partly objective because at
their heart, they are about how humans categorise systems. Take a
simple example of a normally sighted person and a colour blind person
both counting the number of differently coloured beads in a collection.
Barring counting errors, they will both find the same number of beads in
total, however, they will not necessarily agree on the number of beads of
each colour. In particular, red-green confusion is likely12.
How does this affect the theory we describe here ? It might be thought
that by linearly increasing the size of the alphabet, the distribution of the
two alphabets are themselves linearly related, i.e.
alphabet1i = constant× alphabet2i However, this turns out to be not the
case and to understand what is happening, we must return to the duality
of the asymptotic behaviour (5) and (6), which we repeat here,
pi ?
ti
T
=
a??i
Q(?)
(40)
and its algebraic dual given by
qi ?
ai
A
=
t
?1/?
i
?M
i=1 t
?1/?
i
(41)
Since our normally-sighted person and our colour-blind person will
count the same numbers but with different alphabets, we can say that for
the normally sighted person,
pi ?
ti
T
=
(a?i)
???
Q(? ?)
(42)
and for our colour blind person
pi ?
ti
T
=
(a??i )
????
Q(? ??)
(43)
where a?i, a
??
i are the two unique alphabets they use and ?
?, ? ?? their
slopes. Since the lengths are unchanged, we can see straight away from
(42) and (43), that the two unique alphabets will themselves be
power-law related asymptotically
(a?i)
??? ? (a??i )
???? ? a?i ? (a
??
i )
????? , (44)
12https://en.wikipedia.org/wiki/Color_blindness
55
where ? ??? = ?? ??/? ?. This leads us to predict a general rule
In any consistent categorisation of the same system with
different unique alphabets, the distributions of the unique
alphabets will also be related by a power-law.
Music alphabets
Consider an example from the world of music. Music is also a system of
discrete components in the sense described here, Table 1. In recent years,
discrete formats representing the notes and structure of a musical
composition have appeared, for example MusicXML as referenced in the
main text.
If we consider the 88 notes of a full-scale piano as defining the possible
notes in the equal-tempered scale used in the vast majority of published
music, then we have a candidate unique alphabet a?i of 88 (no-duration
alphabet). However, we can subdivide this alphabet quite naturally and
consistently into notes and duration. The standard durations are divided
into fractions of a whole note as breve (2), semi-breve (1), minim (1/2),
crotchet (1/4), quaver (1/8), semiquaver (1/16) and demisemiquaver
(1/32). There are others defined off either end of this list but they are
obviously rare as there were no occurrences in the body of music studied
here. This gives seven flavours of each note and expands the unique
alphabet considerably to 88× 7 = 616 items, (duration alphabet).
Figs. 23a shows the distribution of the two alphabets no-duration and
duration, measured on the same body of music. As expected from (5)
they both exhibit power-law behaviour.
For the no-duration alphabet R reports that the associated
p-value matching the power-law tail linearity in the ccdf of
Fig. 23a is < (2.2)× e?16 over the range 40.0?400.0, with an
adjusted R-squared value of 0.9937. The slope is ?1.66±0.01.
For the duration alphabet R reports that the associated
p-value matching the power-law tail linearity in the ccdf
of Fig. 23a is < (2.2) × e?16 over the range 40.0 ? 4000.0,
with an adjusted R-squared value of 0.9951. The slope is
?1.44± 0.02.
These are emphatic results.
56
A
 10
 100
 1000
 1  10  100  1000
A
bu
nd
an
ce
 o
f m
us
ic
 p
ar
ts
Unique notes
Equal temperament, no duration
Equal temperament, duration
B
 10
 100
 1000
 1  10  100  1000
N
o-
du
ra
tio
n 
al
ph
ab
et
Duration alphabet
Figure 23. The log? log ccdf of the duration and no-duration alphabets
measured on the same body of music used in this study (A), and a
comparison of the two alphabets as log? log showing their clear linear
power-law relationship (B).
Moreover in Fig. 23b which compares the two alphabets
directly on a log? log scale, the predicted power-law rela-
tionship of (44) is clearly visible. R reports that the asso-
ciated p-value matching the power-law tail linearity in the
ccdf of Fig. 23b is < (2.2)× e?16 over the range 10.0? 500.0,
with an adjusted R-squared value of 0.9879. The slope is
1.181 ± 0.002, also consistent with (44). This too is an em-
phatic result.
We believe that this throws some light (but does not necessarily
explain) why the predicted reciprocal relationship between the power-law
slope of the unique alphabet distribution and that of the length
distribution is not adhered to closely in our data. There are a potentially
infinite number of alphabets related themselves by power-laws, but only
one length distribution.
Protein alphabets
For proteins, with increasing sophistication we are able to recognise not
just the 22 amino acids transcribed directly from DNA but also the
increasingly large number of known post-translational modifications
(PTM) which dramatically extend and continue to extend the size of the
unique amino acid alphabet that allows us to categorise proteins. Will
this process of discovery stop ? We argue that it cannot as it is intimately
linked to the total number of proteins known, and this continues to grow
apace.
We can gain insight into the growth of the unique protein alphabet by
studying collections, such as the SwissProt database, over different
57
revisions [61, 63, 64] as it incorporates PTM information from the Selene
project [53].
 1
 10
 100
 1000
 10000
 100000
 10  20  30  40
N
u
m
b
e
r 
o
f 
p
ro
te
in
s 
>
 x
Unique amino acids (x)
SwissProt 13-11
SwissProt 15-07
Figure 24. The classic linear signature of a power-law distributions of
unique amino acid alphabets for SwissProt 13-11 and the more up to date
SwissProt 15-07 on a log? log ccdf.
Fig. 24 shows the frequencies of the unique amino acid alphabet
recorded in the proteins of SwissProt release 13-11 and SwissProt release
15-07 as ccdfs in log? log form. Although the maximum unique alphabet
for amino acids is 22 for those decoded directly from DNA, we should
note that finding a protein with all 22 would be unlikely as both the 21st
and 22nd amino acids, selenocysteine and pyrollysine, are rare in proteins.
Pyrrolysine is found in methanogenic archaea and bacteria and is
encoded by a re-purposed stop codon (UAG), requiring the action of
additional gene products to accomplish its incorporation [47]. Thus it is
not easy to annotate pyrrolysine from the gene sequence alone, and direct
chemical analysis of proteins would be more informative.
Selenocysteine is found in all domains of life, but the selenoproteome is
small [49] and an additional concern is misannotation in the databases,
because a stop codon (UGA) is re-purposed from “halt translation” to
“incorporate seleocysteine” by additional sequences downstream of the
gene as well as other trans-acting factors [36].
As a result, any unique amino acid count beyond 21 must contain
post-translationally modified amino acids and we note the following:
• Almost the whole of the tail of Fig. 24 consists of proteins in which
there must be post-translationally modified amino acids, effectively
doubling the unique alphabet derived directly from DNA.
• The increase in numbers between 20 and 26 unique amino acids can
be seen by the slightly displaced points upwards in the SwissProt
15-07 dataset compared with the SwissProt 13-11 dataset.
58
• The remainder of the tail significantly straightens with the more
comprehensively annotated SwissProt 15-07 presumably due to
reduction in noise and increasing numbers.
The linearity in each tail strongly supports equation (5)
even though the range is less than 1 decade because the
slope is so steep arising from the current paucity of the
unique alphabet. For SwissProt 13-11 of Fig. 24, R lm()
reports that the associated p-value matching the power-law
tail linearity is 8.124×e?13 over the range 19?35, with an ad-
justed R-squared value of 0.9698. The slope is ?15.91± 0.56.
For SwissProt 15-07 of Fig. 24, R lm() reports that the
associated p-value matching the power-law tail linearity is
< 2.2 × e?16 over the range 19 ? 33, with an adjusted R-
squared value of 0.9968. The slope is ?18.56± 0.19.
We should also clear up a potential point of confusion here. One
reviewer stated that the distribution of number of proteins against unique
amino acid count had a “tiny power-law tail” and that the distribution
was uniform. The reviewer reasoned that this explained why the average
length of proteins was highly conserved in contrast to our explanation in
the Appendix p. 53.
It is indeed true at the present rate of knowledge that the distribution
of unique amino acids has a tiny power-law tail but the distribution is
anything but uniform as we can see in SwissProt 13-11 by considering
two different kinds of plot. Fig. 25a plots the logarithmic frequency of
proteins against their unique amino acid alphabet. Whatever this
distribution is, it is certainly not uniform, although we know the tail from
19? 35 amino acids is an accurate power-law from the analysis of the
data shown in Fig. 24.
59
A
 1
 10
 100
 1000
 10000
 100000
 1x106
 5  10  15  20  25  30  35  40
N
um
be
r 
of
 p
ro
te
in
s
Unique amino acids (x)
B
 1
 10
 100
 1000
 10000
 100000
 1x106
 1x107
 1  10  100
R
el
at
iv
e 
ab
un
da
nc
e
ai (elements)
Figure 25. The frequency of proteins plotted against the unique amino
acid count for SwissProt 13-11 on a log?linear plot (A), and the
frequency at which each amino acid occurs including PTM amino acids
plotted in rank order on a log? log ccdf (B).
In contrast, Fig. 25b plots the occurrence rate of each unique amino
acid including post-translational modification across the entire SwissProt
13-11 distribution, of which there are more than 800 recorded by the
Selene project. In other words it shows in how many proteins each amino
acid appears, organised in rank order. This matches the homogeneous
model discussed in Appendix A p. 50, and a power-law in the tail is
evident as expected.
We note in passing a possible intriguing relationship between the
overhang in Fig. 25b between around 10 and 30 on the x-axis and the
contemporary question of PTM undercounting [65].
R lm() reports that the associated p-value matching the
power-law tail linearity in the ccdf of Fig. 25b is < (2.2)×
e?16 over the range 22.0?800.0, with an adjusted R-squared
value of 0.9778. The slope is ?2.63 ± 0.31. This too is an
emphatic result.
60
Appendix D: Power-laws, Statistical Rigour
and Rules of Thumb
Power-laws are ubiquitous in nature and are generated by a number of
mechanisms, [42]. In essence, power-law behaviour can be represented by
the pdf (probability density function) p(s) of entities of size s appearing
in some process, given by a relationship like
p(s) =
k
sb
(45)
where k, b are constants. On a log p? log s scale the pdf is a straight
line with negative slope ?b. It can easily be verified that the equivalent
cdf (cumulative density function) c?(s) derived by integrating (45) also
obeys a power-law ? s?b+1, (for b 6= 1). The classic linear signature of a
power-law tail in a ccdf (complementary cumulative distribution function)
is usually shown as in Fig. 26 which displays c(s) = 1? c?(s).
ilog c
log a i
Figure 26. The classic linear signature of a power-law in the tail of a
log? log ccdf.
For noisy data, the ccdf form is used most often because of its
fundamental property of reducing noise present in the pdf, as noted
by [42]. This effect is because the ccdf is obtained by integration. This
reduces noise inherent in the pdf preserving any power-law behaviour
while allowing any linearity to be measured more accurately. The benefit
of this can be clearly seen in data extracted from software systems as
shown in Figs. 27a (the pdf) and 27b (the corresponding ccdf). The effect
is even more pronounced in the inherently more noisy protein data.
61
A
 1e-05
 0.0001
 0.001
 0.01
 0.1
 1
 10  100  1000
pi
ai (tokens)
pdf: 100 million lines of Ada,C,C++,Fortran,Java,Tcl,Matlab
B
 100
 1000
 10000
 100000
 1e+06
 10  100  1000  10000
S
am
pl
es
 w
ith
 v
al
ue
 >
 a
i
ai (tokens)
cdf: 100 million lines of Ada,C,C++,Fortran,Java,Tcl,Matlab
Figure 27. The pdf (A) and the ccdf (B) of the length distributions of
the same large population of software.
Whilst on the subject of significance, a rule of thumb often used to
determine the existence of a power-law is that it should appear over two
or more decades in the x-axis of the ccdf. This is useful only as a rule of
thumb when the slope is not too steep. Since the scale of the y-axis on
the log? log ccdf is effectively the scale of the x-axis times the slope of
the power-law, then a steep slope would require a large scale of y-axis
frequency measurements to provide the rule of thumb of 2-3 decades in
the x-axis. For example, a slope of around 3 would require y-axis
frequency measurement only over some 6-9 decades to give the rule of
thumb of 2-3 decades in the x-axis, which is reasonable. On the other
hand, if the slope is 10, y-axis frequency measurement over some
unreasonably large 20-30 decades would be required to give the rule of
thumb of 2-3 decades in the x-axis.
This is an important point for the protein studies considered here
wherein we are investigating the predicted power-law in unique alphabet.
Here, the x-axis is the unique alphabet of amino acids. The size of this
alphabet is small at the current state of knowledge, leading to a steep
power-law slope. In such situations, we fall back on normal procedures of
statistical inference to replace subjective belief with objective perception
and therefore all that is required is that there is statistically significant
linearity in the tail of the distribution of the log? log ccdf for the number
of measurement points used. A rule of thumb guides but does not replace
normal statistical inference whereby a result is either significant at some
level or it is not for a given model and data.
This effect can be seen in Fig. 28, a log? log ccdf of the occurrence
rate in the size of the unique alphabet in SwissProt version 13-11 [61],
which is merged with the Selene post-translational modification
data [53, 62]. These represent amongst the best annotated protein data
including the rapidly growing field of post-translational modification
(PTM), a process whereby nature alters some of the amino acids by
covalent processes such as glycosylation, phosphorylation, methylation,
62
acylation, etc., thereby extending the unique alphabet beyond the 22
amino acids directly coded from DNA [2,6, 31, 46, 71].
 1
 10
 100
 1000
 10000
 100000
 10  20  30  40
N
u
m
b
e
r 
o
f 
p
ro
te
in
s 
>
 x
Unique amino acids (x)
Figure 28. The highly linear tail of the occurrence frequency of unique
alphabet sizes in the SwissProt 13-11 protein distribution merged with
the Selene 2013 post-translational modification annotation, extending the
range of the natural unique alphabet of 22 amino acids directly coded
from DNA to just over 30 in this dataset.
As can be seen, the tail of SwissProt 13-11 in Fig. 28, covers only a
range up to just over 30 even though there are thousands of PTM known
or predicted by existing research. As a result there are only nine data
points for unique alphabets of size greater than 20, although each point is
an aggregate of a large number of observations.
An R lm() analysis on this tail reports that the associated
p-value matching the power-law tail linearity in the ccdf
of Fig. 23a is 6.576× e?12 over the range 21.0? 30.0, with an
adjusted R-squared value of 0.9951. The slope is ?22.9±0.2.
This is a statistically emphatic result for the existence of a power-law,
even though the size of the slope is steep because the x-axis is restricted.
Later versions of SwissProt with Selene annotations increase the PTM
alphabet, Appendix C p. 57.
Power-law behaviour has been studied in a wide variety of
environments starting with the pioneering work of [73] (linguistics) and
followed by [48] (economic systems) and the excellent reviews by [38]
and [42]. In software systems significant activity, much of it
recent, [10], [37], [41], [7], [18], [45], [3], [12], [43] and [22] has addressed
power-law behaviour in various contexts.
63
To give some idea of the scope of these, Mitzenmacher [37] considers
the distributions of file sizes in general filing systems and observed that
such file sizes were typically distributed with a lognormal body and a
Pareto (i.e. power-law) tail. Gorshenev and Pis’mak [18] studied the
version control records of a number of open source systems with particular
reference to the number of lines added and deleted at each revision cycle.
Louridas et. al. [43] show evidence that power laws appear in software at
the class and function level and that distributions with long, fat tails in
software are much more pervasive than previously established.
64
1 7 16... ...
Figure 29. A binary tree. Each level proceeding down can either go left
or right. There are four levels leading down to one of 24 = 16 possibilities.
Only four choices are needed to reach any of the possibilities. We note
that log2(16) = 4. Here the number 7 has been singled out by the choices
left, right, left, right as the tree is descended.
Appendix E: Hartley-Shannon Information,
parsimony and token-agnosticism
Information theory has its roots in the work of Hartley [20] who showed
that a message of N signs (i.e. tokens) chosen from an alphabet or code
book of S signs has SN possibilities and that the quantity of information
is most reasonably defined as the logarithm of the number of possibilities
or choices logSN = N logS. To gain insight into the reason why the
logarithm makes sense, consider Fig. 29. The number of choices necessary
to reach any of the 16 possible targets is the number of levels which is
log2(number of possibilities). The base of the logarithm is not important
here.
Information theory was developed substantially by the pioneering work
of Shannon [54], [55] and many researchers since but we have remained
with Hartley’s original clear vision and most importantly its
token-agnosticism. We re-iterate that is important not to conflate
information content with functionality or meaning and Cherry [8]
specifically cautions against this noting that the concept of information
based on alphabets as extended by Shannon and Wiener amongst others,
relates only to the symbols themselves and not their meaning. Indeed,
Hartley in his original work, defined information as the successive
selection of signs, rejecting all meaning as a mere subjective factor. In the
sense used here therefore, Conservation of H-S Information will be
synonymous with Conservation of Choice, not meaning. This turns out to
be enough to predict the important system properties detailed in this
paper. In other words, those properties depend only on the alphabet and
not on what combining tokens of the alphabet might mean in any human
sense.
We believe CoHSI therefore represents the most parsimonious theory
capable of explaining all the observed features of the numerous disparate
65
datasets analysed in this paper.
References
1. A.V. Aho and J.D. Ullman. Principles of Compiler Design.
Addison-Wesley, 1977.
2. R Apweiler, H Hermjakob, and N Sharon. On the frequency of
protein glycosylation, as deduced from analysis of the swiss-prot
database. Biochim Biophys Acta, 1473(1):4–8, December 1999.
3. G. Baxter, M. Frean, J. Noble, M. Rickerby, H. Smith, M. Visser,
H. Melton, and E. Tempero. Understanding the shape of java
software. OOPSLA ’06, 2006.
http://doi.acm.org/10.1145/1167473.1167507.
4. Medigue C, Rose M, Viari A, and Danchin A. Detecting and
Analyzing DNA Sequencing Errors: Toward a Higher Quality of
the Bacillus subtilis Genome Sequence. Genome Res,
9(11):1116–1127, 1999.
5. Matthew P. Campbell, Robyn Peterson, Julien Mariethoz,
Elisabeth Gasteiger, Yukie Akune, Kiyoko F. Aoki-Kinoshita,
Frederique Lisacek, and Nicolle H. Packer. Unicarbkb: building a
knowledge platform for glycoproteomics. Nucleic Acids Research,
42(D1):D215–D221, 2014. 10.1093/nar/gkt1128.
6. M.P. Campbell, R. Peterson, J. Mariethoz, E. Gasteiger, Y. Akune,
K.F. Aoki-Kinoshita, F. Lisacek, and N.H. Packer. Unicarbkb:
building a knowledge platform for glycoproteomics. Nucleic Acids
Res, 2014. 10.1093/nar/gkt1128.
7. D. Challet and A. Lombardoni. Bug propagation and debugging in
asymmetric software structures. Physical Review E, 70(046109),
2004.
8. C. Cherry. On Human Communication. John Wiley Science
Editions, 1963. Library of Congress 56-9820.
9. J.F. Claerbout and M. Karrenbach. Electronic documents give
reproducibility a new meaning. In Proc. 62nd Ann. Int. Meeting,
pages 601–604. Soc. of Exploration Geophysics, 1992.
10. D. Clark and C. Green. An empirical study of list structures in lisp.
Communications of the ACM, 20(2):78–87, 1977.
66
11. A. Clauset. Inference, Models and Simulation for Complex
Systems. Lectures, August 2011.
http://tuvalu.santafe.edu/a?aronc/courses/7000/csci7000-
001 2011lL2.pdf, accessed
24-Jun-2017.
12. G. Concas, M. Marchesi, S. Pinna, and N.Serra. Power-laws in a
large object-oriented software system. IEEE Transactions on
Software Engineering, 33(10):687–708, 2007.
13. R. Dawkins. The Blind Watchmaker. W.W. Norton, 3rd edition,
1986. ISBN 0-393-31570-3.
14. D.L. Donoho, A. Maleki, I.U. Rahman, M. Shahram, and
V. Stodden. Reproducible research in computational harmonic
analysis. Computing in Science and Engineering, 8(18), 2009.
15. S. A. Frank. The common patterns of nature. Journal of
Evolutionary Biology, 22(8):1563–1585, 2009.
10.1111/j.1420-9101.2009.01775.x.
16. V.N. Gladyshev and D.L. Hatfield. Selenocysteine biosynthesis,
selenoproteins, and selenoproteomes. In John F. Atkins and
Raymond F. Gesteland, editors, Recoding: Expansion of Decoding
Rules Enriches Gene Expression, volume 24 of Nucleic Acids and
Molecular Biology, pages 3–27. Springer New York, 2010.
17. A.M. Glazer and J.S. Wark. Statistical Mechanics. A survival guide.
OUP, 2001.
18. A.A. Gorshenev and Yu. M. Pis’mak. Punctuated equilibrium in
software evolution. Physical Review E, 70:067103–1,4, 2004.
19. M. Halstead. Elements of Software Science. Elsevier, 1977. ISBN
0-07-707640-0.
20. R.V.L. Hartley. Transmission of information. Bell System Tech.
Journal, 7:535, 1928.
21. L. Hatton. Stagnation Point Flow in a Vortex Core. Tellus,
XXVII(3), 1975.
22. L. Hatton. Power-law distributions of component sizes in general
software systems. IEEE Transactions on Software Engineering,
35(4):566–572, July/August 2009.
http://doi.ieeecomputersociety.org/10.1109/TSE.2008.105.
67
23. L. Hatton. Conservation of Information: Software’s Hidden
Clockwork. IEEE Transactions on Software Engineering,
40(5):450–460, May 2014. 10.1109/TSE.2014.2316158.
24. L. Hatton and A. Roberts. How accurate is scientific software ?
IEEE Transactions on Software Engineering, 20(10), 1994.
25. L. Hatton and G. Warr. Protein Structure and Evolution: Are
They Constrained Globally by a Principle Derived from
Information Theory ? PLOS ONE, 2015.
doi:10.1371/journal.pone.0125663.
26. L. Hatton and G. Warr. Full Computational Reproducibility in
Biological Science: Methods, Software and a Case Study in Protein
Biology. ArXiv, August 2016. http://arxiv.org/abs/1608.06897
[q-bio.QM].
27. D.C. Ince, L. Hatton, and J. Graham-Cumming. The case for open
program code. Nature, 482:485–488, February 2012.
doi:10.1038/nature10836.
28. ISO/IEC. The C Programming Language, 2011.
http://www.open-std.org/Jtc1/sc22/wg14/.
29. D.N. Ivankov, S.O. Garbuzynskiy, and A.V. Finkelstein. Contact
order revisited: Influence of protein size on the folding rate.
Protein Sci., 12(9):2057–2062, 2014.
30. E.T. Jaynes. Probability Theory: The Logic of Science. Cambridge
University Press, 1st edition, 2003. ISBN 0521592712.
31. G.A. Khoury, R.C. Baliban, and C.A. Floudas. Proteome-wide
post-translational modification statistics: frequency analysis and
curation of the swiss-prot database. Sci. Rep. 1, 1(90), 2011.
10.1038/srep00090.
32. T.J. Lane and V.S. Pande. Inferring the Rate-Length Law of
Protein Folding. PLOS One, 2013.
http://dx.doi.org/10.1371/journal.pone.0078606.
33. D. S. Lemons. A Student’s Guide to Entropy. Cambridge
University Press, 1st edition, 2013. ISBN 1-10-765397-5.
34. M.S. Li, D.K. Klimov, and D. Thirumalai. Dependence of Folding
Rates on Protein Length. Journal of Physical Chemistry,
106(33):8302–8305, 2002. DOI: 10.1021/jp025837q.
68
35. W. Li. Random Texts Exhibit Zipf’s-Law-Like Word Frequency
Distribution. IEEE Transactions on Information Theory,
38(6):1842–1845, 1992. DOI: 10.1109/18.165464.
36. A. Mehta, C.M. Rebsch, S.A. Kinzy, J.E. Fletcher, and P.R.
Copeland. Efficiency of mammalian selenocysteine incorporation. J
Biol Chem, 279(36):37852–9, 2004. DOI: 10.1074/jbc.M404639200.
37. M. Mitzenmacher. Dynamic models for file sizes and double pareto
distributions. Internet Mathematics, 1(1):305–333, 2002.
38. M. Mitzenmacher. A brief history of generative models for
power-law and lognormal distributions. Internet Mathematics,
1(2):226–251, 2003.
39. E.W. Montroll and M.F. Schlesinger. On 1/f noise and other
distributions with long tails. Proc. Nat. Acad. Sci. USA, 79:3380–3,
1982.
40. J. Mo?ssinger. Software in automotive systems. IEEE Software,
27(2):2–4, March/April 2010.
41. Christopher R. Myers. Software systems as complex networks:
Structure, function and evolvability of software collaboration
graphs. Physical Review E, 68(046116), 2003.
42. M. E. J. Newman. Power laws, pareto distributions and zipf’s law.
Contemporary Physics, 46:323–351, 2006.
43. Panagiotis P. Louridas, D. Spinellis, and V. Vlachos. Power laws in
software. ACM Trans. Softw. Eng. Methodol., 18(1):2:1–2:26,
October 2008. 10.1145/1391984.1391986.
44. K.R. Popper. The logic of scientific discovery. Hutchinson,
London, 1959.
45. A. Potanin, J. Noble, M. Frean, and R. Biddle. Scale-free geometry
in OO programs. Comm. ACM., 48(5):99–103, May 2005.
46. S. Prabakaran, G. Lippens, H. Steen, and J. Gunawardena.
Post-translational modification: natures? escape from genetic
imprisonment and the basis for dynamic information encoding.
WIREs Syst Biol Med, 4(6):565–583, 2012. 10.1002/wsbm.1185.
47. F. Quitterer, A. List, P. Beck, A. Backer, and M. Groll.
Biosynthesis of the 22nd genetically encoded amino acid
pyrrolysine: structure and reaction mechanism of PylC at 1.5A?
69
resolution. J. Mol. Biol, 424(5):270–82, 2012. DOI:
10.1016/j.jmb.2012.09.007.
48. P.K. Rawlings, D. Reguera, and H. Reiss. Entropic basis of the
pareto law. Physica A, 343:643–652, July 2004.
49. M.A. Reeves and P.R. Hoffmann. The human selenoproteome:
recent insights into functions and regulation. Cell Mol Life Sci.,
66(15):2457–78, 2009. DOI: 10.1007/s00018-009-0032-4.
50. D. Rousseau. The software behind the Higgs boson discovery. IEEE
Software, 29(5):11–15, 2012. doi:10.1371/journal.pone.0125663.
51. Axel T. Schreiner and H. George Friedman Jr. Introduction to
Compiler Construction with Unix. Prentice-Hall, 1985.
52. R. Sedgewick. Algorithms in C. Addison-Wesley, 1990.
53. The Selene Project, 2013.
http://selene.princeton.edu/PTMCuration/.
54. C.E. Shannon. A mathematical theory of communication. Bell
System Tech. Journal, 27:379–423, July 1948.
55. C.E. Shannon. Communication in the presence of noise. Proc. I. R.
E., 37:10, 1949.
56. M.L. Shooman. Software Engineering. McGraw-Hill, 2nd edition,
1985.
57. H.A. Simon. On a Class of Skew Distribution Functions.
Biometrika, 42:425–440.
58. R Smith. Distinct word length freqencies: distributions and symbol
entropies. Glottometrics, 23:7–22, 2012.
59. A. Sommerfeld. Thermodynamics and Statistical Mechanics.
Academic Press, 1956.
60. G. Srinivasan, C.M. James, and J.A. Krzycki. Pyrrolysine encoded
by uag in archaea: charging of a uag-decoding specialized trna.
Science, 296(5572):1459–62, 2002.
61. SwissProt. The SwissProt release, 13-11, 2013. SwissProt
http://www.uniprot.org/.
62. SwissProt. Controlled vocabulary of posttranslational modifications
PTM, Jun 2014. http://www.uniprot.org/docs/ptmlist.
70
63. SwissProt. The SwissProt release, 15-07, 2015. SwissProt
http://www.uniprot.org/.
64. SwissProt. The SwissProt release, 17-03, 2017. SwissProt
http://www.uniprot.org/.
65. M. Thaysen-Andersen and N.H. Packer. Advances in lc-ms/ms-
based glycoproteomics: Getting closer to system-wide site-specific
mapping of the n- and o-glycoproteome. Biochim Biophys Acta,
1844:1437–1452, 2014.
66. C. Tsallis. Nonextensive statistics: Theoretical, experimental and
computational evidences and connections. Braz. J. Phys., 29:1–35.
67. C. Tsallis. Possible Generalizations of Boltzmann-Gibbs statistics.
J. Stat. Phys., 52:479–87.
68. Milton van Dyke. Perturbation methods in fluid mechanics.
Academic Press, 1970. ISBN 12-713050-0.
69. D.Y. Wang, M.F. Hsieh, and W.H. Li. A general tendency for
conservation of protein length across eukaryotic kingdom.
Molecular Biology and Evolution, 22:142–147, 2005.
10.1093/molbev/msh263.
70. L. Xu, H. Chen, X. Hu, R. Zhang, Z. Zhang, and Z.W. Luo.
Average gene length is highly conserved in prokaryotes and
eukaryotes and diverges only between the two kingdoms. Molecular
Biology and Evolution, 23(6):1107–1108, June 2006.
10.1093/molbev/msk019.
71. S. Zafar, A. Nasir, and H. Bokhari. Computational analysis reveals
abundance of potential glycoproteins in archaea, bacteria and
eukarya. Bioinformation, 6(9):352–355, July 2011.
72. A.M. Ziolkowski. Further Thoughts on Popperian Geophysics–the
Example of Deconvolution”. Geophysical Prospecting, 30:p.155–165,
1982.
73. G.K. Zipf. Psycho-Biology of Languages. Houghton-Miflin, 1935.
71
