ar
X
iv
:1
70
9.
00
69
6v
1 
 [
cs
.I
T
] 
 3
 S
ep
 2
01
7
A multifactor RSA-like scheme with fast decryption
based on Re?dei rational functions over the Pell
hyperbola
Emanuele Bellini
DarkMatter LLC, UAE
Nadir Murru
University of Turin, Italy
Abstract
We propose a generalization of an RSA-like scheme based on Re?dei rational
functions over the Pell hyperbola. Instead of a modulus which is a product of
two primes, we define the scheme on a multi-factor modulus, i.e. on a product
of more than two primes. This results in a scheme with a decryption which
is quadratically faster, in the number of primes factoring the modulus, than
the original RSA, while preserving a better security. The scheme reaches its
best efficiency advantage over RSA for high security levels, since in these cases
the modulus can contain more primes. Compared to the analog schemes based
on elliptic curves, as the KMOV cryptosystem, the proposed scheme is more
efficient. Furthermore a variation of the scheme with larger ciphertext size does
not suffer of impossible group operation attacks, as it happens for schemes based
on elliptic curves.
Keywords: RSA-like cryptosystem, multifactor RSA, multiprime RSA, Re?dei
rational functions, Pell equation, fast decryption
1. Introduction
RSA is the most widespread asymmetric encryption scheme. Its security is
based on the fact that the trapdoor function ?N,e(x) = x
e mod N , with N = pq
product of two large prime integers, and e an invertible element in Z?(N) (?(N)
being the Euler totient function), cannot be inverted by a polynomial-time in
logN algorithm without knowing either the integers p, q, ?(N) or the inverse
d of e modulo ?(N). Thus the pair (N, e), called the public key, is known to
everyone, while the triple (p, q, d), called the secret key, is only known to the
Email addresses: eemanuele.bellini@gmail.com (Emanuele Bellini),
nadir.murru@unito.it (Nadir Murru)
Preprint submitted to Journal of LATEX Templates September 5, 2017
receiver of an encrypted message.
Both encryption and decryption are performed through an exponentiation mod-
ulo N . Precisely, the ciphertext C is obtained as C = M e (mod N), and the
original message M is obtained with the exponentiation M = Cd (mod N).
While usually the encryption exponent is chosen to be small, the decryption
exponent is about the size of N , implying much slower performances during
decryption with respect to encryption.
Through the years many proposal have been presented trying to speed up the
decryption process. In this work we present the fastest, to the authors knowl-
edge, of such decryption algorithms whose security is based on the factorization
problem.
The presented scheme exploits different properties of Re?dei rational functions,
which are classical functions in number theory. The proposed decryption al-
gorithm is quadratically, on the number of primes composing the modulus N ,
faster than RSA.
The work is divided as follows. In Section 2 an overview of the main schemes
based on the factorization problem which successfully improved RSA decryp-
tion step is presented. In Section 3 the main theoretical results underlying our
scheme are described. Section 4 is devoted to the presentation of the crypto-
graphic scheme, and in Section 5 and 6 its security and efficiency are discussed,
respectively. Section 7 concludes the work.
2. Related work
In this section we briefly overview the main cryptographic schemes based on
the factorization problem that have been introduced in order to improve RSA
decryption step.
Usually, the general technique to speed up the RSA decryption step C = M e
(mod N) is to compute the exponentiation modulo each factor of N and then
obtain N using the Chinese Remainder Theorem.
2.1. Multifactor RSA
There exists variants of RSA scheme which exploit a modulus with more than
2 factors to achieve a faster decryption algorithm. This variants are sometimes
called Multifactor RSA ([1]), or Multiprime RSA ([2], [3]). The first proposal
exploiting a modulus of the form N = p1p2p3 has been patented by Compaq
([3], [4]) in 1997. About at the same time Takagi [5] proposed an even faster
solution using the modulus N = prq, for which the exponentiation modulo pr
is computed using the Hensel lifting method [6, p.137]. Later, this solution has
been generalized to the modulus N = prqs [7].
According to [3] the appropriate number of primes to be chosen in order to
resist state-of-the-art factorization algorithms depends from the modulus size,
and, precisely, it can be: up to 3 primes for 1024, 1536, 2048, 2560, 3072, and
3584 bit modulus, up to 4 for 4096, and up to 5 for 8192.
2
2.2. RSA-like schemes
Another solution which allows to obtain even faster decryption is to use
RSA-like schemes based on isomorphism as [8], [9], [10], [11]. As an additional
property, these schemes owns better security properties with respect to RSA,
avoiding small exponent attacks to either d ([12]) or e ([13], [14]), and vulner-
abilities which appear when switching from one-to-one communication scenario
to broadcast scenario (e.g., see [15]).
The aforementioned schemes are based on isomorphism between two groups, one
of which is the set of points over a curve, usually a cubic or a conic. A complete
overview on RSA-like schemes based on conics can be found in [11]. In general,
schemes based on cubic curves have a computationally more expensive addition
operation compared to schemes based on conic equations.
2.3. Generalizing RSA-like scheme with multifactor modulus
As done when generalizing from RSA to Multiprime RSA, in [16] a gen-
eralization of [8], [9] has been proposed, thus generalizing a RSA-like scheme
based on elliptic curves and a modulus N = pq to a similar scheme based on
the generic modulus N = prqs.
In this paper we present a similar generalization of the scheme [11], which is
based on the Pell’s equation, to the modulus N = pe11 · . . . · perr for r > 2,
obtaining the fastest decryption of all schemes discussed in this section.
3. Product of points over the Pell hyperbola
In [11], we introduced a novel RSA–like scheme based on an isomorphism
between certain conics (whose the Pell hyperbola is a special case) and a set of
parameters equipped with a non–standard product. In Section 4, we generalize
this scheme considering a prime power modulus N = pe11 · · · perr . In this section,
we recall some definitions and properties given in [11] in order to improve the
readability of the paper. Then, we study properties of the involved products
and sets in Zpr and ZN .
3.1. A group structure over the Pell hyperbola over a field
Let K be a field and x2?D an irreducible polynomial over K[x]. Considering
the quotient field A[x] = K[x]/(x2 ?D), the induced product over A[x] is
(p+ qx)(r + sx) = (pr + qsD) + (qr + ps)x.
The group of unitary elements of A?[x] = A[x]?{0A[x]} 1 is {p+qx ? A?[x] :
p2?Dq2 = 1}. Thus, we can introduce the commutative group (HD,K,?), where
HD,K = {(x, y) ? K×K : x2 ?Dy2 = 1}
1The element 0A[x] is the zero polynomial.
3
and
(x, y)? (w, z) = (xw + yzD, yw + xz), ?(x, y), (w, z) ? HD,K. (1)
It is worth noting that (1, 0) is the identity and the inverse of an element (x, y)
is (x,?y).
Remark 1. When K = R, the conic HD,K, for D a non–square integer, is called
the Pell hyperbola since it contains all the solutions of the Pell equation and ?
is the classical Brahamagupta product, see, e.g., [17].
3.2. A parametrization of the Pell hyperbola
From now on let A = A[x].
Starting from A?, we can derive a parametrization for HD,K. In particular, let
us consider the group A?/K?, whose elements are the equivalence classes of A?
and can be written as
{[a+ x] : a ? K} ? {[1K? ]}.
The induced product over A?/K? is given by
[a+ x][b + x] = [ab+ ax+ bx+ x2] = [D + ab+ (a+ b)x]
and, if a+ b 6= 0, we have
[a+ x][b + x] =
[
D + ab
a+ b
+ x
]
else
[a+ x][b + x] = [D + ab] = [1K? ].
This construction allows us to define the set of parameters PK = K? {?}, with
? not in K, equipped with the following product:
?
?
?
a? b = D + ab
a+ b
, a+ b 6= 0
a? b = ?, a+ b = 0
. (2)
We have that (PK,?) is a commutative group with identity ? and the inverse
of an element a is the element b such that a+b = 0. Now, consider the following
parametrization for the conic HD,K:
y =
1
m
(x+ 1) .
It can be proved that the following isomorphism between (HD,K,?) and (PK,?)
holds:
?D :
?
?
?
?
?
?
?
?
?
?
?
HD,K ? PK
(x, y) 7?
1 + x
y
?(x, y) ? HD,K, y 6= 0
(1, 0) 7? ?
(?1, 0) 7? 0 ,
(3)
4
and
??1D :
?
?
?
?
?
?
?
?
?
PK ? HD,K
m 7?
(
m2 +D
m2 ?D ,
2m
m2 ?D
)
?m ? K
? 7? (1, 0) ,
, (4)
see [18] and [11].
Proposition 1. When K = Zp, p prime, (PK,?) and (HD,K,?) are cyclic
groups of order p+ 1 and
m?(p+2) = m (mod p), ?m ? PZp
or, equivalently
(x, y)?(p+2) = (x, y) (mod p), ?(x, y) ? HD,Zp ,
where powers are performed using products ? and ?, respectively. See [11].
The powers in PK can be efficiently computed by means of the Re?dei rational
functions [19], which are classical functions in number theory. They are defined
by considering the development of
(z +
?
D)n = An(D, z) +Bn(D, z)
?
D,
for z integer and D non–square positive integer. The polynomials An(D, z) and
Bn(D, z) defined by the previous expansion are called Re?dei polynomials and
can be evaluated by
Mn =
(
An(D, z) DBn(D, z)
Bn(D, z) An(D, z)
)
where
M =
(
z D
1 z
)
.
From this property, it follows that the Re?dei polynomials are linear recurrent
sequences with characteristic polynomial t2?2zt+(z2?D). The Re?dei rational
functions are defined by
Qn(D, z) =
An(D, z)
Bn(D, z)
, ?n ? 1.
Proposition 2. Let m?n be the n–th power of m ? PK with respect to ?, then
m?n = Qn(D,m).
See [20].
Remark 2. The Re?dei rational functions can be evaluated by means of an al-
gorithm of complexity O(log2(n)) with respect to addition, subtraction and
multiplication over rings [21].
5
3.3. Properties of the Pell hyperbola over a ring
In this section, we study the case K = Zpr that we will exploit in the next
section for the construction of a cryptographic scheme. In what follows, we will
omit from HD,K the dependence on D when it will be clear from the context.
First, we need to determine the order ofHZpr in order to have a result similar
to Proposition 1 also in this situation.
Theorem 1. The order of the cyclic group HZpr is pr?1(p + 1), i.e., the Pell
equation x2 ?Dy2 = 1 has pr?1(p+ 1) solutions in Zpr for D ? Z?pr quadratic
non–residue in Zp.
Proof. Since, by Proposition 1, the Pell equation in Zp has p+1 solutions, then
we need to prove the following
1. any solution of the Pell equation in Zp, generates p
r?1 solutions of the
same equation in Zpr ;
2. all the solutions of the Pell equation in Zpr are generated as in the previous
step.
(1) Let (x0, y0) be a solution of x
2 ? Dy2 ? 1 (mod p). We want to prove
that for any integer 0 ? k < pr?1, there exists one and only one integer h
such that (x0 + kp, y0 + hp) is solution of x
2 ?Dy2 ? 1 (mod pr).
Indeed, we have
(x0 + kp)
2 ?D(y0 + hp)2 = 1 + vp+ 2x0kp+ k2p2 ? 2Dy0hp?Dh2p2,
since x20 ? Dy20 = 1 + vp for a certain integer v. Thus, we have that
(x0 + kp, y0 + hp) is solution of x
2 ?Dy2 ? 1 (mod pr) if and only if
Dph2 + 2Dy0h? v ? 2x0k ? k2p ? 0 (mod pr?1).
Hence, we have to prove that there is one and only one integer h that
satisfies the above identity. The above equation can be solved in h by
completing the square and reduced to
(2Dph+ 2Dy0)
2 ? s (mod pr?1), (5)
where s = (2Dy0)
2 + 4(v + 2x0k + k
2p)Dp. Let us prove that s is a
quadratic residue in Zpr?1 . Indeed,
s = 4D((x0 + kp)
2 ? 1)
and surely the Jacobi symbol
(
s
pr?1
)
=
(
s
p
)r?1
= 1 if r is odd.
If r is even we have that
(
s
pr?1
)
=
(
4
pr?1
)(
D
pr?1
)(
(x0 + kp)
2 ? 1
pr?1
)
= 1
6
since
(
4
pr?1
)
= 1,
(
D
pr?1
)
=
(
D
p
)r?1
= ?1 by hypothesis on D,
(
(x0 + kp)
2 ? 1
pr?1
)
= ?1, since (x0 + kp)2 ? 1 ? Dy20 (mod p).
Now, let ±t be the square roots of s. It is easy to note that
t ? 2Dy0 (mod p), ?t ? ?2Dy0 (mod p)
or
?t ? 2Dy0 (mod p), t ? ?2Dy0 (mod p).
Let us call t? the only one between t and ?t that is equal to 2Dy0 in Zp.
Hence, Equation (5) is equivalent to the linear equation
ph ? (t?? 2Dy0)(2D)?1 (mod pr?1),
which has one and only one solution, since t? ? 2Dy0 ? 0 (mod p). Note
that, if t? is not equal to 2Dy0 in Zp the above equation has no solutions.
Thus, we have proved that any solution of the Pell equation in Zp generates
pr?1 solutions of the Pell equation in Zpr .
(2) Now, we prove that all the solutions of the Pell equation in Zpr are gen-
erated as in step 1.
Let (x?, y?) be a solution of x2?Dy2 ? 1 (mod pr), i.e., x?2?Dy?2 = 1+wpr,
for a certain integer w. Then x0 = x??kp and y0 = y??hp, for h, k integers,
are solutions of x2 ?Dy2 ? 1 (mod p). Indeed,
(x?? kp)2 ?D(y? ? hp)2 = 1 + wpr ? 2x?kp+ k2p2 + 2Dy?hp?Dh2p2 .
As a consequence of the previous theorem, an analogous of the Euler theorem
holds for the product ?.
Theorem 2. Let p, q be prime numbers and N = prqs, then for all (x, y) ? HZN
we have
(x, y)?p
r?1(p+1)qs?1(s+1) ? (1, 0) (mod N)
for D ? Z?N quadratic non–residue in Zp and Zq.
Proof. By Theorem 1, we know that
(x, y)?p
r?1(p+1) ? (1, 0) (mod pr)
and
(x, y)?q
s?1(s+1) ? (1, 0) (mod qs).
7
Thus, said (a, b) = (x, y)?p
r?1(p+1)qs?1(s+1), we have
(a, b) ? (1, 0) (mod pr),
i.e., a = 1+kpr and b = hpr for some integers h, k. On the other hand, we have
(a, b) ? (1, 0) (mod qs) ? (1 + kpr, hpr) ? (1, 0) (mod qs).
We can observe that 1 + kpr ? 1 (mod qs) if and only if k = k?qs for a certain
integer k?. Similarly, it must be h = h?qs, for an integer h?. Hence, we have that
(a, b) = (1 + k?prqs, h?prqs) ? (1, 0) (mod N).
Corollary 1. Let p1, ..., pr be primes and N = p
e1
1 · . . . ·perr , then for all (x, y) ?
HZN we have
(x, y)??(N) = (1, 0) (mod N),
where
?(N) = pe1?11 (p1 + 1) · . . . · per?1r (pr + 1),
for D ? Z?N quadratic non–residue in Zpi , for i = 1, ..., r.
Now, we can observe that when we work on ZN , the map ?D is not an
isomorphism. Indeed, the orders of HD,ZN and PZN do not coincide. However,
it is still a morphism and we also have |Z?N | = |H?ZN |, because of the following
proposition.
Proposition 3. With the above notation, we have that
1. ?(x1, y1), (x2, y2) ? H?ZN , ?D(x1, y1) = ?D(x2, y2) ? (x1, y1) = (x2, y2);
2. ?m1,m2 ? Z?N , ??1D (m1) = ??1D (m2) ? m1 = m2;
3. ?m ? Z?N , we have ??1(m) ? H?ZN and ?(x, y) ? H?ZN , we have ?D(x, y) ?
Z
?
N .
See [11].
As a consequence, we have an analogous of the Euler theorem also for the
product ?, i.e., for all m ? Z?N the following holds
m??(N) = ? (mod N) ,
where ? is the special product in PZN defined in Equation 3.2.
4. The cryptographic scheme
In this section, we describe our public–key cryptosystem based on the prop-
erties studied in the previous section.
8
4.1. Key generation
The key generation is performed by the following steps:
• choose r prime numbers p1, . . . , pr, r odd integers e1, . . . , er and compute
N =
?r
i=1 p
ei
i ;
• choose an integer e such that gcd(e, lcm?ri=1 pei?1i (pi + 1)) = 1;
• evaluate d = e?1 (mod lcm?ri=1 pei?1i (pi + 1)).
The public or encryption key is given by (N, e) and the secret or decryption key
is given by (p1, . . . , pr, d).
4.2. Encryption
We can encrypt pair of messages (Mx,My) ? Z?N ×Z?N , such that the follow-
ing condition holds:
(
M2x ? 1
N
)
= ?1. This will ensure that we can perform all
the operations. The encryption of the messages is performed by the following
steps:
• compute D = M
2
x ? 1
M2y
(mod N), so that (Mx,My) ? H?D,ZN ;
• compute M = ?(Mx,My) =
Mx + 1
My
(mod N);
• compute the ciphertext C = M?e (mod N) = Qe(D,M) (mod N)
Notice that not only C, but the pair (C,D) must be sent through the insecure
channel.
4.3. Decryption
The decryption is performed by the following steps:
• compute C?d (mod N) = Qd(D,C) (mod N) = M ;
• compute ??1(M) =
(
M2 +D
M2 ?D,
2M
M2 ?D
)
(mod N) for retrieving the
messages (Mx,My).
5. Security of the encryption scheme
The proposed scheme can be attacked by solving one of the following prob-
lems:
1. factorizing the modulus N = pe11 · . . . · perr ;
9
2. computing ?(N) = pe1?11 (p1+1) · . . . ·per?1r (pr+1), or finding the number
of solutions of the equation x2 ?Dy2 ? 1 mod N , i.e. the curve order,
which divides ?(N);
3. computing Discrete Logarithm problem either in (H?
ZN
,?) or in (P?
ZN
,?);
4. finding the unknown d in the equation ed ? 1 mod ?(N);
5. finding an impossible group operation in PZN ;
6. computing Mx,My from D.
5.1. Factorizing N or computing the curve order
It is well known that the problem of factorizing N = pe11 ·. . .·perr is equivalent
to that of computing the Euler totient function ?(N) = pe1?11 (p1 ? 1) · . . . ·
per?1r (pr ? 1), e.g. see [22] or [23, Section 10.4].
In our case we need to show the following
Proposition 4. The problem of factorizing N is equivalent to computing the
value ?(N) = pe1?11 (p1 + 1) · . . . · per?1r (pr + 1) or the order of the group P?ZN
(or equivalently of H?
ZN
), which is a divisor of ?(N).
Proof. Clearly, knowing the factorization of N yields ?(N).
Conversely, suppose N and ?(N) are known. A factorization of N can be found
by applying Algorithm 1 recursively.
Remark 3. Algorithm 1 is an adaptation of the general algorithm in [23, Section
10.4], used to factorize N by only knowing ?(N) (Euler totient function) and N
itself. The main idea of the Algorithm 1 comes from the fact that x??(N) = 1
(mod N) for all x ? Z?N , which is the analog of the Euler theorem in PZN .
Notice that, because of Step 7, Algorithm 1 is a probabilistic algorithm. Thus,
to find a non-trivial factor, it might be necessary to run the algorithm more than
once. We expect that a deeper analysis of the algorithm will lead to a similar
probabilistic behaviour than the algorithm in [23], which returns a non-trivial
factor with probability 1/2.
Since we proved that the problems 1 and 2 are equivalent, we can only focus
on the factorization problem.
According to [3], state-of-the-art factorization methods as the Elliptic Curve
Method [24] or the Number Field Sieve [25], [26] are not effective if in the
following practical cases
• |N | = 1024, 1536, 2048, 2560, 3072, 3584 and N = pe11 pe22 pe33 with e1 + e2 +
e3 ? 3 and pi, i = 1, 2, 3 greater than approximately the size of 3
?
N .
• |N | = 4096 and N = pe11 pe22 pe33 pe44 with e1 + e2 + e3 + e4 ? 4 and pi, i =
1, . . . , 4 greater than approximately the size of 4
?
N .
• |N | = 8192 and N = pe11 pe22 pe33 pe44 pe55 with e1 + e2 + e3 + e4 + e5 ? 5 and
pi, i = 1, . . . , 5 greater than approximately the size of
5
?
N .
10
Algorithm 1 Find a factor of N by knowing N and ?(N)
1: function Find factor(N ,?(N))
2: h = 0
3: t = ?(N)
4: while IsEven(t) do
5: h = h + 1
6: t = t / 2
7: a = Random(N ? 1)
8: d = gcd(a,N)
9: if d 6= 1 then
10: return d
11: b = a?t mod N
12: for j = 0, . . . , h? 1 do
13: d = gcd(b + 1, N)
14: if d 6= 1 or d 6= N then
15: return d
16: b = b2 mod N
17: return 0
Notice that currently, the largest prime factor found by the Elliptic Curve
Method is a 274 bit digit integer [27]. Note also that the Lattice Factoring
Method (LFM) of Boneh, Durfee, and Howgrave-Graham [28] is designed to
factor integers of the form N = puq only for large u.
5.2. Computing the Discrete Logarithm
Solving the discrete logarithm problem in a conic curve can be reduced to
the discrete logarithm problem in the underlying finite field [29]. In our case the
curve is defined over the ring ZN . Solving the DLP over ZN without knowing
the factorization of N is as hard as solving the DLP over a prime finite field of
approximately the same size. As for the factorization problem, the best known
algorithm to solve DLP on a prime finite field is the Number Field Sieve. When
the size of N is greater than 1024 then the NFS can not be effective.
5.3. Solving the private key equation
In the case of RSA, small exponent attacks ([12], [13], [14]) can be performed
to find the unknown d in the equation ed ? 1 mod ?(N). Generalization of
these attacks can be performed on RSA variants where the modulus is of the
form N = pe11 p
e2
2 [30]. It has already been argued in [11] and [9] that this kind
of attacks fails when the trapdoor function is not a simple monomial power as
in RSA, as it is in the proposed scheme.
5.4. Finding an impossible group operation
In the case of elliptic curves over ZN , as in the generalized KMOV cryp-
tosystem [16], it could happen that an impossible addition between two curve
11
points occurs, yielding the factorization of N . This is due to the fact that the
addition formula requires to perform an inversion in the underlying ring ZN .
However, as shown by the same authors of [16], the occurrence of an impossible
addition is very unlikely for N with few and large prime factors.
In our case an impossible group operation may occur if a + b is not invertible
in ZN , i.e. if gcd(a+ b,N) 6= 1, yielding in fact a factor of N . However, also in
our case, if N contains a few large prime factors, impossible group operations
occur with negligible probability, as shown by the following proposition.
Proposition 5. The probability to find an invertible element in PZN is approx-
imately
1?
(
1? 1
p1
)
· . . . ·
(
1? 1
pr
)
Proof. The probability to find an invertible element in PZN is given by dividing
the number of non-invertible elements in PZN by the total number of elements
of this set, as follows:
|PZN | ?#{invertible elements in PZN}
|PZN |
= (6)
=
|ZN |+ 1? (#{invertible elements in ZN}+ 1)
|ZN |+ 1
= (7)
=
N ? ?(N)
N + 1
= (8)
?1?
(
1? 1
p1
)
· . . . ·
(
1? 1
pr
)
(9)
where we used N ? N + 1 and ?(N) = N
(
1? 1
p1
)
· . . . ·
(
1? 1
pr
)
.
This probability tends to zero for large prime factors.
Let us notice that, in the Pell curve case, it is possible to avoid such situation,
by performing encryption and decryption in H?
ZN
, without exploiting the iso-
morphism operation. Here the group operation ? is defined between two points
on the Pell curve, as in Equation 3.1, and does not contain the inverse operation.
In the resulting scheme the ciphertext is obtained as (Cx, Cy) = (Mx,My)
?e,
where the operation ? depends on D. Thus the triple (Cx, Cy, D) must be
transmitted, resulting in a non-compressed ciphertext.
5.5. Recovering the message from D
To recover the message pair (Mx,My) from D =
M2x?1
M2y
(mod N), the at-
tacker must solve the quadratic congruence M2x ?DM2y ? 1 = 0 (mod N) with
respect to the two unknowns Mx and My. Even if one of the two coordinates
is known (partially known plaintext attack), it is well known that computing
square roots modulo a composite integer N , when the square root exists, is
equivalent to factoring N itself.
12
5.6. Further comments
As a conclusion to this section, we only mention that as shown in [11], RSA-
like schemes based on isomorphism own the following properties: they are more
secure than RSA in the broadcast scenario, they can be transformed to seman-
tically secure schemes using standard techniques which introduce randomness
in the process of generating the ciphertext.
6. Efficiency of the encryption scheme
Recall that our scheme encrypts and decrypts messages of size 2 logN . To
decrypt a ciphertext of size 2 logN using CRT, standard RSA requires four full
exponentiation modulo N/2-bit primes. Basic algorithms to compute xd mod p
requires O(log d log2 p), which is equal to O(log3 p) if d ? p.
Using CRT, if N = pe11 · . . . · perr , our scheme requires at most r exponentiation
modulo N/r-bit primes.
This means that the final speed up of our scheme with respect to RSA is
4 · (N/2)3
r · (N/r)3 = r
2/2 (10)
When r = 2 our scheme is two times faster than RSA, as it has already been
shown in [11]. If r = 3 our scheme is 4.5 time faster, with r = 4 is 8 times faster,
and with r = 5 is 12.5 times faster.
7. Conclusions
We generalized an RSA-like scheme based on the Pell hyperbola from a
modulus that was a product of two primes to a generic modulus. We showed
that this generalization leads to a very fast decryption step, up to 12 times
faster than original RSA for the security level of a modulus of 8192 bits. The
scheme preserves all security properties of RSA-like schemes, which are in gen-
eral more secure than RSA, especially in a broadcast scenario. Compared to
similar schemes based on elliptic curves it is more efficient. We also pointed
that a variation of the scheme with non-compressed ciphertext does not suffer
of impossible group operation attacks.
References
References
[1] D. Boneh, H. Shacham, Fast variants of RSA, CryptoBytes 5 (1) (2002)
1–9.
[2] M. Ciet, F. Koeune, F. Laguillaumie, J.-J. Quisquater, Short private expo-
nent attacks on fast variants of RSA, UCL Crypto Group Technical Report
Series CG-2002/4, University Catholique de Louvain.
13
[3] Cryptography using Compaq multiprime tech-
nology in a parallel processing environment,
ftp://15.217.49.193/pub/solutions/CompaqMultiPrimeWP.pdf,
http://nonstop.compaq.com/view.asp?IOID=4523 (2002).
[4] T. Collins, D. Hopkins, S. Langford, M. Sabin, Public key cryptographic
apparatus and method, uS Patent 5,848,159 (Dec. 8 1998).
[5] T. Takagi, Fast RSA-type cryptosystem modulo pkq, in: Advances in
Cryptology–CRYPTO’98, Springer, 1998, pp. 318–326.
[6] H. Cohen, A course in computational algebraic number theory, Vol. 138,
Springer Science & Business Media, 2013.
[7] S. Lim, S. Kim, I. Yie, H. Lee, A generalized Takagi-cryptosystem with a
modulus of the form prqs, in: Indocrypt, Springer, 2000, pp. 283–294.
[8] K. Koyama, U. M. Maurer, T. Okamoto, S. A. Vanstone, New public-
key schemes based on elliptic curves over the ring Zn, in: Advances in
Cryptology–CRYPTO’91, Springer, 1992, pp. 252–266.
[9] K. Koyama, Fast RSA-type schemes based on singular cubic curves
y2 + axy ? x3 (mod n), in: Advances in Cryptology–EUROCRYPT’95,
Springer, 1995, pp. 329–340.
[10] S. Padhye, A Public Key Cryptosystem Based on Pell Equation., IACR
Cryptology ePrint Archive 2006 (2006) 191.
[11] E. Bellini, N. Murru, An efficient and secure RSA–like cryptosystem ex-
ploiting Re?dei rational functions over conics, Finite Fields and Their Ap-
plications 39 (2016) 179–194.
[12] M. J. Wiener, Cryptanalysis of short RSA secret exponents, Information
Theory, IEEE Transactions on 36 (3) (1990) 553–558.
[13] D. Coppersmith, M. Franklin, J. Patarin, M. Reiter, Low-exponent RSA
with related messages, in: Advances in Cryptology–EUROCRYPT’96,
Springer, 1996, pp. 1–9.
[14] D. Coppersmith, Small solutions to polynomial equations, and low expo-
nent RSA vulnerabilities, Journal of Cryptology 10 (4) (1997) 233–260.
[15] J. Hastad, On using RSA with low exponent in a public key network,
in: Advances in Cryptology–CRYPTO’85 Proceedings, Springer, 1986, pp.
403–408.
[16] M. Boudabra, A. Nitaj, A new generalization of the KMOV cryptosystem,
Journal of Applied Mathematics and Computing (2017) 1–17.
[17] M. J. Jacobson, H. C. Williams, K. Taylor, K. Dilcher, Solving the Pell
equation, Springer, 2009.
14
[18] S. Barbero, U. Cerruti, N. Murru, Generalized Re?dei rational functions and
rational approximations over conics, Int. J. Pure Appl. Math 64 (2) (2010)
305–317.
[19] L. Re?dei, U?ber eindeutig umkehrbare polynome in endlichen ko?rpern, Acta
Sci. Math.(Szeged) 11 (1946) 85–92.
[20] S. Barbero, U. Cerruti, N. Murru, Solving the Pell equation via Re?dei
rational functions, The Fibonacci Quarterly 48 (4) (2010) 348–357.
[21] W. More, Fast evaluation of Re?dei functions, Appl. Algebra Eng. Commun.
Comput. 6 (3) (1995) 171–173.
[22] G. L. Miller, Riemann’s hypothesis and tests for primality, in: Proceedings
of seventh annual ACM symposium on Theory of computing, ACM, 1975,
pp. 234–239.
[23] V. Shoup, A computational introduction to number theory and algebra,
Cambridge university press, 2009.
[24] H. W. Lenstra Jr, Factoring integers with elliptic curves, Annals of math-
ematics (1987) 649–673.
[25] A. K. Lenstra, H. W. Lenstra Jr, M. S. Manasse, J. M. Pollard, The number
field sieve, in: The development of the number field sieve, Springer, 1993,
pp. 11–42.
[26] D. J. Bernstein, A. K. Lenstra, A general number field sieve implementa-
tion, in: The development of the number field sieve, Springer, 1993, pp.
103–126.
[27] Zimmermann, 50 largest factors found by ECM,
https://members.loria.fr/PZimmermann/records/top50.html, ac-
cessed 2017-07-28.
[28] D. Boneh, G. Durfee, N. Howgrave-Graham, Factoring n = prq for large
r., in: Crypto, Vol. 1666, Springer, 1999, pp. 326–337.
[29] A. J. Menezes, S. A. Vanstone, A note on cyclic groups, finite fields, and
the discrete logarithm problem, Applicable Algebra in Engineering, com-
munication and computing 3 (1) (1992) 67–74.
[30] Y. Lu, L. Peng, S. Sarkar, Cryptanalysis of an RSA variant with moduli
n = prql, Journal of Mathematical Cryptology 11 (2) (2017) 117–130.
15
